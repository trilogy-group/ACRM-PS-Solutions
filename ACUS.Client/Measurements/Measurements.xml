<?xml version="1.0" encoding="utf-8" ?>
<Measurements>
  <Measurement exposedName="ACUS-1" name="Duplicates in organisations" returnType="int">
    <SqlQueries>
      <Query isDesigner="false" prefix="" postfix="">

        WITH CTE_DuplicateFI AS (
        SELECT Firma,Internet,EMail1,Telefon,Land, Plz, Ort, Strasse, COUNT(*) c
        FROM {tablePrefix}FI
        GROUP BY Firma, Internet,EMail1, Telefon,Land, Plz, Ort, Strasse
        HAVING COUNT(*) > 1)
        SELECT COUNT(*) FROM CTE_DuplicateFI
      </Query>
      <Query isDesigner="false" prefix="" postfix="">
        SELECT COUNT(*) FROM {tablePrefix}FI
      </Query>
    </SqlQueries>
    <OracleQueries>
      <Query isDesigner="false" prefix="" postfix="">

        WITH CTE_DuplicateFI AS (
        SELECT Firma,Internet,EMail1,Telefon,Land, Plz, Ort, Strasse, COUNT(*) c
        FROM {tablePrefix}FI
        GROUP BY Firma, Internet,EMail1, Telefon,Land, Plz, Ort, Strasse
        HAVING COUNT(*) > 1)

        SELECT COUNT(*) FROM CTE_DuplicateFI
      </Query>
      <Query isDesigner="false" prefix="" postfix="">
        SELECT COUNT(*) FROM {tablePrefix}FI
      </Query>
    </OracleQueries>
  </Measurement>
  <Measurement exposedName="ACUS-2" name="Duplicates in persons" returnType="int">
    <SqlQueries>
      <Query isDesigner="false" prefix="" postfix="">
        WITH CTE_DuplicatePE AS (
        SELECT FName,VName,EMail,TelPriv,Land, Plz, Ort, Str, COUNT(*) c
        FROM {tablePrefix}PE
        GROUP BY FName,VName,EMail,TelPriv,Land, Plz, Ort, Str
        HAVING COUNT(*) > 1)
        SELECT COUNT(*) FROM CTE_DuplicatePE
      </Query>
      <Query isDesigner="false" prefix="" postfix="">
        SELECT COUNT(*) FROM {tablePrefix}PE
      </Query>
    </SqlQueries>
    <OracleQueries>
      <Query isDesigner="false" prefix="" postfix="">
        WITH CTE_DuplicatePE AS (
        SELECT FName,VName,EMail,TelPriv,Land, Plz, Ort, Str, COUNT(*) c
        FROM {tablePrefix}PE
        GROUP BY FName,VName,EMail,TelPriv,Land, Plz, Ort, Str
        HAVING COUNT(*) > 1)
        SELECT COUNT(*) FROM CTE_DuplicatePE
      </Query>
      <Query isDesigner="false" prefix="" postfix="">
        SELECT COUNT(*) FROM {tablePrefix}PE
      </Query>
    </OracleQueries>
  </Measurement>
  <Measurement exposedName="ACUS-4" name="Email fields filled for persons" returnType="int">
    <SqlQueries>
      <Query isDesigner="false" prefix="" postfix="">
        SELECT COUNT(*)
        FROM {tablePrefix}PE
        WHERE ISNULL(EMail, '') = ''
      </Query>
      <Query isDesigner="false" prefix="" postfix="">
        SELECT COUNT(*) FROM {tablePrefix}PE
      </Query>
    </SqlQueries>
    <OracleQueries>
      <Query isDesigner="false" prefix="" postfix="">
        SELECT COUNT(*)
        FROM {tablePrefix}PE
        WHERE NVL(EMail, '') = ''
      </Query>
      <Query isDesigner="false" prefix="" postfix="">
        SELECT COUNT(*) FROM {tablePrefix}PE
      </Query>
    </OracleQueries>
  </Measurement>
  <Measurement exposedName="ACUS-10" name="Is the system configured to use Relationship Management on Organisations and Persons?" returnType="int">
    <SqlQueries>
      <Query isDesigner="false" prefix="" postfix="">SELECT COUNT(*) FROM {tablePrefix}PB WHERE ISNULL(ID_FI, 0) != 0</Query>
      <Query isDesigner="false" prefix="" postfix="">SELECT COUNT(*) FROM {tablePrefix}PB WHERE ISNULL(ID_PE, 0) != 0</Query>
      <Query isDesigner="false" prefix="" postfix="">SELECT COUNT(*) FROM {tablePrefix}PB</Query>
    </SqlQueries>
    <OracleQueries>
      <Query isDesigner="false" prefix="" postfix="">SELECT COUNT(*) FROM {tablePrefix}PB WHERE NVL(ID_FI, 0) != 0</Query>
      <Query isDesigner="false" prefix="" postfix="">SELECT COUNT(*) FROM {tablePrefix}PB WHERE NVL(ID_PE, 0) != 0</Query>
      <Query isDesigner="false" prefix="" postfix="">SELECT COUNT(*) FROM {tablePrefix}PB</Query>
    </OracleQueries>
  </Measurement>
  <Measurement exposedName="ACUS-11" name="Good adoption of relationship types?" returnType="bool">
    <SqlQueries>
      <Query isDesigner="false" prefix="" postfix="">
        SELECT CASE WHEN (SELECT COUNT(DISTINCT Beziehungsart) FROM {tablePrefix}PB WHERE Beziehungsart != 0) = (SELECT COUNT(Code) FROM {tablePrefix}KA WHERE KatNr = 213 and ExtKey != '' and KatSperre = 0)
        THEN 1
        ELSE 0
        END
      </Query>
      <Query isDesigner="false" prefix="" postfix="">
        SELECT CASE WHEN (SELECT TOP 1 TotalRelations
        FROM(
        SELECT Beziehungsart, COUNT(*) as TotalRelations
        FROM {tablePrefix}PB
        WHERE Beziehungsart != 0
        GROUP BY Beziehungsart
        ) vw
        ORDER BY TotalRelations) > 50
        THEN 1
        ELSE 0
        END
      </Query>
    </SqlQueries>
    <OracleQueries>
      <Query isDesigner="false" prefix="" postfix="">
        SELECT CASE WHEN (SELECT COUNT(DISTINCT Beziehungsart) FROM {tablePrefix}PB WHERE Beziehungsart != 0) =
        (SELECT COUNT(Code) FROM {tablePrefix}KA WHERE KatNr = 213 and ExtKey != '' and KatSperre = HEXTORAW(0))
        THEN 1
        ELSE 0
        END FROM DUAL
      </Query>
      <Query isDesigner="false" prefix="" postfix="">
        SELECT CASE WHEN (SELECT * FROM (SELECT TotalRelations
        FROM(
        SELECT Beziehungsart, COUNT(*) as TotalRelations
        FROM {tablePrefix}PB
        WHERE Beziehungsart != 0
        GROUP BY Beziehungsart
        ) vw
        ORDER BY TotalRelations) WHERE rownum &lt;= 1) > 50
        THEN 1
        ELSE 0
        END FROM DUAL
      </Query>
    </OracleQueries>
  </Measurement>
  <Measurement exposedName="ACUS-13" name="Is a Connector implemented for automated sync of activities?" returnType="int">
    <SqlQueries>
      <Query isDesigner="false" prefix="" postfix="">SELECT COUNT(*) FROM {tablePrefix}MA WHERE dbo.{tablePrefix}RkzPart(4201, RKZ) = 20</Query>
      <Query isDesigner="false" prefix="" postfix="">SELECT COUNT(*) FROM {tablePrefix}MA</Query>
    </SqlQueries>
    <OracleQueries>
      <Query isDesigner="false" prefix="" postfix="">SELECT COUNT(*) FROM {tablePrefix}MA WHERE {tablePrefix}RkzPart(4201, RKZ) = 20</Query>
      <Query isDesigner="false" prefix="" postfix="">SELECT COUNT(*) FROM {tablePrefix}MA</Query>
    </OracleQueries>
  </Measurement>
  <Measurement exposedName="ACUS-15" name="Measure engagement level per sales rep" returnType="int">
    <SqlQueries>
      <Query isDesigner="false" prefix="" postfix="">
        WITH CTE_MA AS (
        SELECT ID, BeaId FROM {tablePrefix}MA
        WHERE BeaId != 0 AND Neu BETWEEN CAST(FORMAT(DATEADD(YEAR, -3, GETDATE()),'yyyyMMddHHmmssfff') AS BIGINT)
        AND CAST(FORMAT(GETDATE(),'yyyyMMddHHmmssfff') AS BIGINT))
        SELECT CASE WHEN COUNT(*) = 0
        THEN 0
        ELSE COUNT(*)/(3 * COUNT(DISTINCT BeaId))
        END
        FROM CTE_MA
      </Query>
    </SqlQueries>
    <OracleQueries>
      <Query isDesigner="false" prefix="" postfix="">
        WITH CTE_MA AS (
        SELECT ID, BeaId FROM CRM_MA
        WHERE BeaId != 0 AND Neu BETWEEN CAST(TO_CHAR(INTERVAL '-3' YEAR + SYSTIMESTAMP,'YYYYMMDDHHMMSSFF3') AS NUMBER(19))
        AND CAST(TO_CHAR(SYSTIMESTAMP,'YYYYMMDDHHMMSSFF3') AS NUMBER(19)))

        SELECT CASE WHEN COUNT(*) = 0
        THEN 0
        ELSE COUNT(*)/(3 * COUNT(DISTINCT BeaId))
        END
        FROM CTE_MA
      </Query>
    </OracleQueries>
  </Measurement>
  <Measurement exposedName="ACUS-16" name="Have all occured visits/calls a visit report?" returnType="int">
    <SqlQueries>
      <Query isDesigner="false" prefix="" postfix="">
        WITH CTE_MA AS (
        SELECT ID, BeaId FROM {tablePrefix}MA
        WHERE [Status] = 0 AND BeaId != 0 AND
        Neu BETWEEN CAST(FORMAT(DATEADD(YEAR, -3, GETDATE()),'yyyyMMddHHmmssfff') AS BIGINT)
        AND CAST(FORMAT(DATEADD(DAY, -1, GETDATE()),'yyyyMMddHHmmssfff') AS BIGINT))
        SELECT CASE WHEN COUNT(*) = 0
        THEN 0
        ELSE ISNULL(CEILING(COUNT(*)/(3 * COUNT(DISTINCT BeaId))), 0)
        END
        FROM CTE_MA
      </Query>
      <Query isDesigner="false" prefix="" postfix="">
        WITH CTE_MA AS (
        SELECT ID, BeaId FROM {tablePrefix}MA ma
        WHERE [Status] = 1 AND BeaId != 0 AND
        LEN(ISNULL([Text], '')) &lt; 10 AND
        (SELECT COUNT(*) FROM {tablePrefix}D3 WHERE ID_GENERIC = ma.ID) = 0 AND
        Neu BETWEEN CAST(FORMAT(DATEADD(YEAR, -3, GETDATE()),'yyyyMMddHHmmssfff') AS BIGINT)
        AND  CAST(FORMAT(GETDATE(),'yyyyMMddHHmmssfff') AS BIGINT))
        SELECT CASE WHEN COUNT(*) = 0
        THEN 0
        ELSE ISNULL(CEILING(COUNT(*)/(3 * COUNT(DISTINCT BeaId))), 0)
        END
        FROM CTE_MA
      </Query>
    </SqlQueries>
    <OracleQueries>
      <Query isDesigner="false" prefix="" postfix="">
        WITH CTE_MA AS (
        SELECT ID, BeaId FROM {tablePrefix}MA
        WHERE Status = 0 AND BeaId != 0 AND
        Neu BETWEEN CAST(TO_CHAR(INTERVAL '-3' YEAR + SYSTIMESTAMP,'YYYYMMDDHHMMSSFF3') AS NUMBER(19))
        AND CAST(TO_CHAR(INTERVAL '-1' DAY(5) + SYSTIMESTAMP,'YYYYMMDDHHMMSSFF3') AS NUMBER(19)))

        SELECT CASE WHEN COUNT(*) = 0
        THEN 0
        ELSE NVL(CEIL(COUNT(*)/(3 * COUNT(DISTINCT BeaId))), 0)
        END
        FROM CTE_MA
      </Query>
      <Query isDesigner="false" prefix="" postfix="">
        WITH CTE_MA AS (
        SELECT ID, BeaId FROM {tablePrefix}MA ma
        WHERE Status = 1 AND BeaId != 0 AND
        LENGTH(RTRIM(NVL(Text, ''))) &lt; 10 AND
        (SELECT COUNT(*) FROM {tablePrefix}D3 WHERE ID_GENERIC = ma.ID) = 0 AND
        Neu BETWEEN CAST(TO_CHAR(INTERVAL '-3' YEAR + SYSTIMESTAMP,'YYYYMMDDHHMMSSFF3') AS NUMBER(19))
        AND  CAST(TO_CHAR(SYSTIMESTAMP,'YYYYMMDDHHMMSSFF3') AS NUMBER(19)))

        SELECT CASE WHEN COUNT(*) = 0
        THEN 0
        ELSE NVL(CEIL(COUNT(*)/(3 * COUNT(DISTINCT BeaId))), 0)
        END
        FROM CTE_MA
      </Query>
    </OracleQueries>
  </Measurement>
  <Measurement exposedName="ACUS-17" name="Are the visit/call reports well structured so they can be analysed (free text)?" returnType="int">
    <SqlQueries>
      <Query isDesigner="false" prefix="" postfix="">
        WITH CTE_MA AS (
        SELECT COUNT(*) As TotalActivities,
        SUM(CASE WHEN LEN(ISNULL([Text], '')) != 0
        THEN 1
        ELSE 0
        END) AS ActivitiesWithText
        FROM {tablePrefix}MA
        )
        SELECT ISNULL(CEILING(ActivitiesWithText*100/TotalActivities), 0)
        FROM CTE_MA
      </Query>
      <Query isDesigner="false" prefix="" postfix="">
        WITH CTE_MA AS (
        SELECT COUNT(*) As TotalActivities,
        SUM(CASE WHEN LEN(ISNULL([Text], '')) > 250
        THEN 1
        ELSE 0
        END) AS ActivitiesWithText
        FROM {tablePrefix}MA
        )
        SELECT ISNULL(CEILING(ActivitiesWithText*100/TotalActivities), 0)
        FROM CTE_MA
      </Query>
    </SqlQueries>
    <OracleQueries>
      <Query isDesigner="false" prefix="" postfix="">
        WITH CTE_MA AS (
        SELECT COUNT(*) As TotalActivities,
        SUM(CASE WHEN LENGTH(RTRIM(NVL(Text, ''))) != 0
        THEN 1
        ELSE 0
        END) AS ActivitiesWithText
        FROM {tablePrefix}MA
        )

        SELECT NVL(CEIL(ActivitiesWithText*100/TotalActivities), 0)
        FROM CTE_MA
      </Query>
      <Query isDesigner="false" prefix="" postfix="">
        WITH CTE_MA AS (
        SELECT COUNT(*) As TotalActivities,
        SUM(CASE WHEN LENGTH(RTRIM(NVL(Text, ''))) > 250
        THEN 1
        ELSE 0
        END) AS ActivitiesWithText
        FROM {tablePrefix}MA
        )

        SELECT NVL(CEIL(ActivitiesWithText*100/TotalActivities), 0)
        FROM CTE_MA
      </Query>
    </OracleQueries>
  </Measurement>
  <Measurement exposedName="ACUS-18" name="Are discussion topics enabled in the system (and used)?" returnType="int">
    <SqlQueries>
      <Query isDesigner="false" prefix="" postfix="">
        WITH CTE_MA AS (
        SELECT COUNT(*) As TotalActivities,
        SUM(CASE WHEN F5000 != 0
        THEN 1
        ELSE 0
        END) AS ActivitiesWithObjectives
        FROM {tablePrefix}MA
        )
        SELECT ISNULL(CEILING(ActivitiesWithObjectives*100/TotalActivities), 0)
        FROM CTE_MA
      </Query>
      <Query isDesigner="false" prefix="" postfix="">
        WITH CTE_MA AS (
        SELECT COUNT(*) As TotalActivities,
        SUM(CASE WHEN F5004 != 0
        THEN 1
        ELSE 0
        END) AS ActivitiesWithAchievements
        FROM {tablePrefix}MA
        )
        SELECT ISNULL(CEILING(ActivitiesWithAchievements*100/TotalActivities), 0)
        FROM CTE_MA
      </Query>
    </SqlQueries>
    <OracleQueries>
      <Query isDesigner="false" prefix="" postfix="">
        WITH CTE_MA AS (
        SELECT COUNT(*) As TotalActivities,
        SUM(CASE WHEN F5000 != 0
        THEN 1
        ELSE 0
        END) AS ActivitiesWithObjectives
        FROM {tablePrefix}MA
        )
        
        SELECT NVL(CEIL(ActivitiesWithObjectives*100/TotalActivities), 0)
        FROM CTE_MA
      </Query>
      <Query isDesigner="false" prefix="" postfix="">
       WITH CTE_MA AS (
        SELECT COUNT(*) As TotalActivities,
        SUM(CASE WHEN F5004 != 0
        THEN 1
        ELSE 0
        END) AS ActivitiesWithAchievements
        FROM {tablePrefix}MA
        )
        
        SELECT NVL(CEIL(ActivitiesWithAchievements*100/TotalActivities), 0)
        FROM CTE_MA
      </Query>
    </OracleQueries>
  </Measurement>
  <Measurement exposedName="ACUS-19" name="Is a Connector implemented for automated sync of tasks?" returnType="int">
    <SqlQueries>
      <Query isDesigner="false" prefix="" postfix="">
        SELECT COUNT(*)
        FROM {tablePrefix}A1
        INNER JOIN {tablePrefix}XK
        ON {tablePrefix}A1.ID = {tablePrefix}XK.ID_GENERIC
        WHERE DateiKurzk = 'A1'
      </Query>
    </SqlQueries>
    <OracleQueries>
      <Query isDesigner="false" prefix="" postfix="">        
        SELECT COUNT(*)
        FROM {tablePrefix}A1 a1
        INNER JOIN {tablePrefix}XK xk
        ON a1.ID = xk.ID_GENERIC
        WHERE DateiKurzk = 'A1'
      </Query>
    </OracleQueries>
  </Measurement>
  <Measurement exposedName="ACUS-22" name="Integration to Document Store implemented through Connector" returnType="bool">
    <SqlQueries>
      <Query isDesigner="false" prefix="" postfix="">
        SELECT 0
      </Query>
    </SqlQueries>
    <OracleQueries>
      <Query isDesigner="false" prefix="" postfix="">
        SELECT 0 FROM dual
      </Query>
    </OracleQueries>
  </Measurement>
  <Measurement exposedName="ACUS-23" name="Not too much documents?" returnType="int">
    <SqlQueries>
      <Query isDesigner="false" prefix="" postfix="">
        SELECT COUNT(*) FROM {tablePrefix}D1
        WHERE Neu >= CAST(FORMAT(DATEADD(YEAR, -1, GETDATE()),'yyyyMMddHHmmssfff') AS BIGINT)
      </Query>
      <Query isDesigner="false" prefix="" postfix="">
        SELECT ISNULL(CEILING((SUM(CAST(ISNULL(DkLaenge, 0)AS BIGINT))*1.0/(1024*1024*1024))), 0)
        FROM {tablePrefix}D1
      </Query>
      <Query isDesigner="false" prefix="" postfix="">
        WITH CTE_D1 AS (
        SELECT (SUM(CAST(ISNULL(DkLaenge, 0)AS BIGINT))*1.0/(1024*1024*1024)) AS Size, SUBSTRING(CAST(Neu AS VARCHAR(20)), 1, 4) AS [Year]
        FROM {tablePrefix}D1
        WHERE Neu BETWEEN CAST(format(DATEADD(year, -3, GETDATE()),'yyyyMMddHHmmssfff') as bigint)
        AND CAST(format(getdate(),'yyyyMMddHHmmssfff') as bigint)
        GROUP BY SUBSTRING(CAST(Neu AS VARCHAR(20)), 1, 4))
        SELECT ISNULL(CEILING(AVG(Size)), 0) FROM CTE_D1
      </Query>
    </SqlQueries>
    <OracleQueries>
      <Query isDesigner="false" prefix="" postfix="">
        SELECT COUNT(*) FROM {tablePrefix}D1
        WHERE Neu >= CAST(TO_CHAR(INTERVAL '-1' YEAR + SYSTIMESTAMP,'YYYYMMDDHHMMSSFF3') AS NUMBER(19))
      </Query>
      <Query isDesigner="false" prefix="" postfix="">
        SELECT NVL(CEIL((SUM(CAST(NVL(DkLaenge, 0)AS NUMBER(19)))*1.0/(1024*1024*1024))), 0)
        FROM {tablePrefix}D1
      </Query>
      <Query isDesigner="false" prefix="" postfix="">
        WITH CTE_D1 AS (
        SELECT (SUM(CAST(NVL(DkLaenge, 0)AS NUMBER(19)))*1.0/(1024*1024*1024)) AS DocSize, SUBSTR(TO_CHAR(Neu), 1, 4) AS Year
        FROM {tablePrefix}D1
        WHERE Neu BETWEEN CAST(TO_CHAR(INTERVAL '-3' year + SYSTIMESTAMP,'YYYYMMDDHHMMSSFF3') as number(19))
        AND CAST(TO_CHAR(systimestamp,'YYYYMMDDHHMMSSFF3') as number(19))
        GROUP BY SUBSTR(TO_CHAR(Neu), 1, 4))

        SELECT NVL(CEIL(AVG(DocSize)), 0) FROM CTE_D1
      </Query>
    </OracleQueries>
  </Measurement>
  <Measurement exposedName="ACUS-25" name="Storing data on won/lost deals with information which competitors you won/lost against?" returnType="int">
    <SqlQueries>
      <Query isDesigner="false" prefix="" postfix="">
        SELECT CASE WHEN (SELECT COUNT(*) FROM {tablePrefix}Y1)>0
        THEN
        (SELECT ISNULL(CEILING((SELECT COUNT(*)*100.0 FROM {tablePrefix}Y1 Y1
        INNER JOIN {tablePrefix}Y2 Y2
        ON Y1.ID = Y2.ID_Y1
        INNER JOIN {tablePrefix}FI FI
        ON Y2.ID_FI = FI.ID
        WHERE Y1.[Status] IN (2, 3)
        AND FI.Fityp  = 0
        AND Y1.Upd BETWEEN CAST(format(DATEADD(year, -1, GETDATE()),'yyyyMMddHHmmssfff') as bigint)
        AND CAST(format(getdate(),'yyyyMMddHHmmssfff') as bigint))/(SELECT COUNT(*) FROM {tablePrefix}Y1)), 0))
        ELSE 0
        END
      </Query>
    </SqlQueries>
    <OracleQueries>
      <Query isDesigner="false" prefix="" postfix="">
        SELECT CASE WHEN (SELECT COUNT(*) FROM {tablePrefix}Y1)>0
        THEN
        (SELECT NVL(CEIL((SELECT COUNT(*)*100.0 FROM {tablePrefix}Y1 Y1
        INNER JOIN {tablePrefix}Y2 Y2
        ON Y1.ID = Y2.ID_Y1
        INNER JOIN {tablePrefix}FI FI
        ON Y2.ID_FI = FI.ID
        WHERE Y1.Status IN (2, 3)
        AND FI.Fityp  = 0
        AND Y1.Upd BETWEEN CAST(TO_CHAR(INTERVAL '-1' year + SYSTIMESTAMP,'YYYYMMDDHHMMSSFF3') as number(19))
        AND CAST(TO_CHAR(systimestamp,'YYYYMMDDHHMMSSFF3') as number(19)))/(SELECT COUNT(*) FROM {tablePrefix}Y1)), 0)
        FROM DUAL)
        ELSE 0
        END
        FROM DUAL
      </Query>
    </OracleQueries>
  </Measurement>
  <Measurement exposedName="ACUS-26" name="Is a collaboration link set up for each competitor in the system?" returnType="int">
    <SqlQueries>
      <Query isDesigner="false" prefix="" postfix="">
        SELECT 0
      </Query>
    </SqlQueries>
    <OracleQueries>
      <Query isDesigner="false" prefix="" postfix="">
        SELECT 0 FROM dual
      </Query>
    </OracleQueries>
  </Measurement>
  <Measurement exposedName="ACUS-27" name="For how much of the opportunities has a collaboration link been set up?" returnType="int">
    <SqlQueries>
      <Query isDesigner="false" prefix="" postfix="">SELECT 0</Query>
    </SqlQueries>
    <OracleQueries>
      <Query isDesigner="false" prefix="" postfix="">SELECT 0 FROM dual</Query>
    </OracleQueries>
  </Measurement>
  <Measurement exposedName="ACUS-28" name="Real time interface set up between backend system and CRM to sync stock levels?" returnType="bool">
    <SqlQueries>
      <Query isDesigner="false" prefix="" postfix="">
        SELECT CASE WHEN (SELECT COUNT(*)
        FROM {tablePrefix}B6
        INNER JOIN {tablePrefix}XK
        ON {tablePrefix}B6.ID = {tablePrefix}XK.ID_GENERIC
        WHERE DateiKurzk = 'B6') > 0
        THEN 1
        ELSE 0
        END
      </Query>
    </SqlQueries>
    <OracleQueries>
      <Query isDesigner="false" prefix="" postfix="">
        SELECT CASE WHEN (SELECT COUNT(*)
        FROM {tablePrefix}B6
        INNER JOIN {tablePrefix}XK
        ON {tablePrefix}B6.ID = {tablePrefix}XK.ID_GENERIC
        WHERE DateiKurzk = 'B6') > 0
        THEN 1
        ELSE 0
        END
        FROM DUAL
      </Query>
    </OracleQueries>
  </Measurement>
  <Measurement exposedName="ACUS-31" name="For how much of the projects in the system has a collaboration link been generated?" returnType="int">
    <SqlQueries>
      <Query isDesigner="false" prefix="" postfix="">SELECT 0</Query>
    </SqlQueries>
    <OracleQueries>
      <Query isDesigner="false" prefix="" postfix="">SELECT 0 FROM dual</Query>
    </OracleQueries>
  </Measurement>
  <Measurement exposedName="ACUS-33" name="Is there a regular sync set up to keep all SKU's and prices up to date in the Item Master?" returnType="bool">
    <SqlQueries>
      <Query isDesigner="false" prefix="" postfix="">
        SELECT CASE WHEN ((SELECT COUNT(*)
        FROM {tablePrefix}AR AR
        INNER JOIN {tablePrefix}XK XK
        ON AR.ID = XK.ID_GENERIC
        WHERE XK.DateiKurzk = 'AR') > 0
        AND
        (SELECT COUNT(*)
        FROM {tablePrefix}PL PL
        INNER JOIN {tablePrefix}XK XK
        ON PL.ID = XK.ID_GENERIC
        WHERE XK.DateiKurzk = 'PL') > 0)
        THEN 1
        ELSE 0
        END
      </Query>
    </SqlQueries>
    <OracleQueries>
      <Query isDesigner="false" prefix="" postfix="">
        SELECT CASE WHEN ((SELECT COUNT(*)
        FROM {tablePrefix}AR AR
        INNER JOIN {tablePrefix}XK XK
        ON AR.ID = XK.ID_GENERIC
        WHERE XK.DateiKurzk = 'AR') > 0
        AND
        (SELECT COUNT(*)
        FROM {tablePrefix}PL PL
        INNER JOIN {tablePrefix}XK XK
        ON PL.ID = XK.ID_GENERIC
        WHERE XK.DateiKurzk = 'PL') > 0)
        THEN 1
        ELSE 0
        END FROM DUAL
      </Query>
    </OracleQueries>
  </Measurement>
  <Measurement exposedName="ACUS-35" name="Has Serial Entry been set up?" returnType="bool">
    <SqlQueries>
      <Query isDesigner="true" prefix="" postfix="">
        ;WITH sub_config AS (
        SELECT configid, name, 1 AS relative_depth
        FROM PORTAL_CONFIG
        WHERE name = 'TE_ISI'

        UNION ALL

        SELECT config.configid, config.name, sc.relative_depth + 1
        FROM PORTAL_CONFIG config, sub_config sc
        WHERE config.parentid = sc.configid
        )
        SELECT CASE WHEN (SELECT COUNT(*) FROM sub_config sc
        INNER JOIN PORTAL_HEADER ph
        ON sc.configid = ph.configid and sc.name != 'TE_ISI'
        INNER JOIN PORTAL_HEADER_BUTTONS phb
        ON ph.headerid = phb.headerid
        INNER JOIN PORTAL_DIRECTBUTTONS pdb
        ON phb.directbuttonname = pdb.name
        INNER JOIN PORTAL_PAGE_CALLPARAMETERS ppcp
        ON pdb.refid = ppcp.Refid
        where ppcp.ParameterName = 'Command' AND ArgValue LIKE '%SerialEntry%') > 0
        THEN 1
        ELSE 0
        END
      </Query>
    </SqlQueries>
    <OracleQueries>
      <Query isDesigner="true" prefix="" postfix="">
        ;WITH sub_config AS (
        SELECT configid, name, 1 AS relative_depth
        FROM PORTAL_CONFIG
        WHERE name = 'TE_ISI'

        UNION ALL

        SELECT config.configid, config.name, sc.relative_depth + 1
        FROM PORTAL_CONFIG config, sub_config sc
        WHERE config.parentid = sc.configid
        )
        SELECT CASE WHEN (SELECT COUNT(*) FROM sub_config sc
        INNER JOIN PORTAL_HEADER ph
        ON sc.configid = ph.configid and sc.name != 'TE_ISI'
        INNER JOIN PORTAL_HEADER_BUTTONS phb
        ON ph.headerid = phb.headerid
        INNER JOIN PORTAL_DIRECTBUTTONS pdb
        ON phb.directbuttonname = pdb.name
        INNER JOIN PORTAL_PAGE_CALLPARAMETERS ppcp
        ON pdb.refid = ppcp.Refid
        where ppcp.ParameterName = 'Command' AND ArgValue LIKE '%SerialEntry%') > 0
        THEN 1
        ELSE 0
        END
      </Query>
    </OracleQueries>
  </Measurement>
  <Measurement exposedName="ACUS-36" name="Has the Suggestions functionality been set up for Orders?" returnType="bool">
    <SqlQueries>
      <Query isDesigner="false" prefix="" postfix="">
        SELECT CASE WHEN (SELECT COUNT(*) FROM {tablePrefix}SV) > 0
        THEN 1
        ELSE 0
        END
      </Query>
    </SqlQueries>
    <OracleQueries>
      <Query isDesigner="false" prefix="" postfix="">
        SELECT CASE WHEN (SELECT COUNT(*) FROM {tablePrefix}SV) > 0
        THEN 1
        ELSE 0
        END FROM DUAL
      </Query>      
    </OracleQueries>
  </Measurement>
  <Measurement exposedName="ACUS-38" name="Is a graphical relationship view, which shows direct and indirect relationships, available?" returnType="bool">
    <SqlQueries>
      <Query isDesigner="true" prefix="" postfix="">
        ;WITH sub_config AS (
        SELECT configid, name, 1 AS relative_depth
        FROM PORTAL_CONFIG
        WHERE name = 'TE_ISI'

        UNION ALL

        SELECT config.configid, config.name, sc.relative_depth + 1
        FROM PORTAL_CONFIG config, sub_config sc
        WHERE config.parentid = sc.configid
        )
        SELECT CASE WHEN (SELECT COUNT(*) FROM sub_config sc
        INNER JOIN PORTAL_MENUITEM pmi
        ON sc.configid = pmi.configid and sc.name != 'TE_ISI'
        INNER JOIN PORTAL_MENUENTRY pme
        ON pmi.menuid = pme.menuid
        where pmi.visible = 1 AND (pmi.label like '%A_CircleOfInfluence%' OR pme.menuentry like '%A_CircleOfInfluence%')) > 0
        THEN 1
        ELSE 0
        END
      </Query>
    </SqlQueries>
    <OracleQueries>
      <Query isDesigner="true" prefix="" postfix="">
        ;WITH sub_config AS (
        SELECT configid, name, 1 AS relative_depth
        FROM PORTAL_CONFIG
        WHERE name = 'TE_ISI'

        UNION ALL

        SELECT config.configid, config.name, sc.relative_depth + 1
        FROM PORTAL_CONFIG config, sub_config sc
        WHERE config.parentid = sc.configid
        )
        SELECT CASE WHEN (SELECT COUNT(*) FROM sub_config sc
        INNER JOIN PORTAL_MENUITEM pmi
        ON sc.configid = pmi.configid and sc.name != 'TE_ISI'
        INNER JOIN PORTAL_MENUENTRY pme
        ON pmi.menuid = pme.menuid
        where pmi.visible = 1 AND (pmi.label like '%A_CircleOfInfluence%' OR pme.menuentry like '%A_CircleOfInfluence%')) > 0
        THEN 1
        ELSE 0
        END
      </Query>
    </OracleQueries>
  </Measurement>
  <Measurement exposedName="ACUS-39" name="Are at least 2 Relationship Levels represented in the graph?" returnType="bool">
    <SqlQueries>
      <Query isDesigner="false" prefix="" postfix="">
        SELECT CASE WHEN (SELECT COUNT(*) FROM {tablePrefix}PB pb1
        WHERE EXISTS(SELECT * FROM {tablePrefix}PB pb2
        WHERE pb2.ID_FI = pb1.ID_FI2
        OR pb2.ID_PE = pb1.ID_PE2)) > 0
        THEN 1
        ELSE 0
        END
      </Query>
    </SqlQueries>
    <OracleQueries>
      <Query isDesigner="false" prefix="" postfix="">
        SELECT CASE WHEN (SELECT COUNT(*) FROM {tablePrefix}PB pb1
        WHERE EXISTS(SELECT * FROM {tablePrefix}PB pb2
        WHERE pb2.ID_FI = pb1.ID_FI2
        OR pb2.ID_PE = pb1.ID_PE2)) > 0
        THEN 1
        ELSE 0
        END FROM DUAL
      </Query>      
    </OracleQueries>
  </Measurement>
  <Measurement exposedName="ACUS-40" name="Is customer behavioral data stored per organisation and natural person and reported on through the Customer Journey timeline?" returnType="bool">
    <SqlQueries>
      <Query isDesigner="true" prefix="" postfix="">
        ;WITH sub_config AS (
        SELECT configid, name, 1 AS relative_depth
        FROM PORTAL_CONFIG
        WHERE name = 'TE_ISI'

        UNION ALL

        SELECT config.configid, config.name, sc.relative_depth + 1
        FROM PORTAL_CONFIG config, sub_config sc
        WHERE config.parentid = sc.configid
        )
        SELECT CASE WHEN (SELECT COUNT(*) FROM sub_config sc
        INNER JOIN PORTAL_HEADER ph
        ON sc.configid = ph.configid and sc.name != 'TE_ISI'
        INNER JOIN PORTAL_HEADER_BUTTONS phb
        ON ph.headerid = phb.headerid
        WHERE phb.directbuttonname in ('TE_OJ_Timeline', 'TE_FI_AccountTimeline', 'TE_FI_MarketingTimeline', 'TE_Y1_Timeline')) > 0
        THEN 1
        ELSE 0
        END
      </Query>
    </SqlQueries>
    <OracleQueries>
      <Query isDesigner="true" prefix="" postfix="">
        ;WITH sub_config AS (
        SELECT configid, name, 1 AS relative_depth
        FROM PORTAL_CONFIG
        WHERE name = 'TE_ISI'

        UNION ALL

        SELECT config.configid, config.name, sc.relative_depth + 1
        FROM PORTAL_CONFIG config, sub_config sc
        WHERE config.parentid = sc.configid
        )
        SELECT CASE WHEN (SELECT COUNT(*) FROM sub_config sc
        INNER JOIN PORTAL_HEADER ph
        ON sc.configid = ph.configid and sc.name != 'TE_ISI'
        INNER JOIN PORTAL_HEADER_BUTTONS phb
        ON ph.headerid = phb.headerid
        WHERE phb.directbuttonname in ('TE_OJ_Timeline', 'TE_FI_AccountTimeline', 'TE_FI_MarketingTimeline', 'TE_Y1_Timeline')) > 0
        THEN 1
        ELSE 0
        END
      </Query>
    </OracleQueries>
  </Measurement>
  <Measurement exposedName="ACUS-42" name="For all contact moments in the customer journey, is the system checking with the customer how they experienced the contact?" returnType="bool">
    <SqlQueries>
      <Query isDesigner="false" prefix="" postfix="">SELECT 0</Query>
    </SqlQueries>
    <OracleQueries>
      <Query isDesigner="false" prefix="" postfix="">SELECT 0 FROM dual</Query>
    </OracleQueries>
  </Measurement>
  <Measurement exposedName="ACUS-43" name="Are these NPS scores stored in the system and provided per activity, per organisation and per natural person?" returnType="bool">
    <SqlQueries>
      <Query isDesigner="false" prefix="" postfix="">SELECT 0</Query>
    </SqlQueries>
    <OracleQueries>
      <Query isDesigner="false" prefix="" postfix="">SELECT 0 FROM dual</Query>
    </OracleQueries>
  </Measurement>
  <Measurement exposedName="ACUS-44" name="Are NPS scores reported on per region, department, organisation and natural person and reported on?" returnType="bool">
    <SqlQueries>
      <Query isDesigner="false" prefix="" postfix="">SELECT 0</Query>
    </SqlQueries>
    <OracleQueries>
      <Query isDesigner="false" prefix="" postfix="">SELECT 0 FROM dual</Query>
    </OracleQueries>
  </Measurement>
  <Measurement exposedName="ACUS-45" name="Are the NPS scores shown in the Customer Journey Visualisation timeline?" returnType="bool">
    <SqlQueries>
      <Query isDesigner="false" prefix="" postfix="">SELECT 0</Query>
    </SqlQueries>
    <OracleQueries>
      <Query isDesigner="false" prefix="" postfix="">SELECT 0 FROM dual</Query>
    </OracleQueries>
  </Measurement>
  <Measurement exposedName="ACUS-46" name="For how much of the accounts has a collaboration link been set up?" returnType="int">
    <SqlQueries>
      <Query isDesigner="false" prefix="" postfix="">SELECT 0</Query>
    </SqlQueries>
    <OracleQueries>
      <Query isDesigner="false" prefix="" postfix="">SELECT 0 FROM dual</Query>
    </OracleQueries>
  </Measurement>
  <Measurement exposedName="ACUS-47" name="Is a news feed set up to populate the sales intelligence panel on the customer detail page?" returnType="bool">
    <SqlQueries>
      <Query isDesigner="false" prefix="" postfix="">SELECT 0</Query>
    </SqlQueries>
    <OracleQueries>
      <Query isDesigner="false" prefix="" postfix="">SELECT 0 FROM dual</Query>
    </OracleQueries>
  </Measurement>
  <Measurement exposedName="ACUS-48" name="Is a news feed set up to populate the sales intelligence panel on the opportunity detail page?" returnType="bool">
    <SqlQueries>
      <Query isDesigner="false" prefix="" postfix="">SELECT 0</Query>
    </SqlQueries>
    <OracleQueries>
      <Query isDesigner="false" prefix="" postfix="">SELECT 0 FROM dual</Query>
    </OracleQueries>
  </Measurement>
  <Measurement exposedName="ACUS-49" name="Is a news feed set up to populate the sales intelligence panel on the home page for a sales rep?" returnType="bool">
    <SqlQueries>
      <Query isDesigner="false" prefix="" postfix="">SELECT 0</Query>
    </SqlQueries>
    <OracleQueries>
      <Query isDesigner="false" prefix="" postfix="">SELECT 0 FROM dual</Query>
    </OracleQueries>
  </Measurement>
  <Measurement exposedName="ACUS-50" name="Is a news feed set up to populate the sales intelligence panel on the competitor detail page?" returnType="bool">
    <SqlQueries>
      <Query isDesigner="false" prefix="" postfix="">SELECT 0</Query>
    </SqlQueries>
    <OracleQueries>
      <Query isDesigner="false" prefix="" postfix="">SELECT 0 FROM dual</Query>
    </OracleQueries>
  </Measurement>
  <Measurement exposedName="ACUS-51" name="Business Graph set up?" returnType="bool">
    <SqlQueries>
      <Query isDesigner="false" prefix="" postfix="">SELECT 0</Query>
    </SqlQueries>
    <OracleQueries>
      <Query isDesigner="false" prefix="" postfix="">SELECT 0 FROM dual</Query>
    </OracleQueries>
  </Measurement>
  <Measurement exposedName="ACUS-52" name="Is automatic route planning in place?" returnType="bool">
    <SqlQueries>
      <Query isDesigner="true" prefix="" postfix="">
        ;WITH sub_config AS (
        SELECT configid, name, 1 AS relative_depth
        FROM PORTAL_CONFIG
        WHERE name = 'TE_ISI'

        UNION ALL

        SELECT config.configid, config.name, sc.relative_depth + 1
        FROM PORTAL_CONFIG config, sub_config sc
        WHERE config.parentid = sc.configid
        )
        SELECT CASE
        WHEN
        (
        SELECT COUNT(*)
        FROM sub_config AS sc
        INNER JOIN PORTAL_PAGEREF AS pr
        ON sc.configid = pr.configid
        INNER JOIN PORTAL_MENUACTION AS ma
        ON pr.refid = ma.refid
        INNER JOIN PORTAL_MENUITEM AS mi
        ON ma.menuid = mi.menuid
        WHERE
        pr.pagename IN ('VisitPlanning')
        ) > 0 OR
        (
        SELECT COUNT(*)
        FROM sub_config AS sc
        INNER JOIN PORTAL_PAGEREF AS pr
        ON sc.configid = pr.configid
        INNER JOIN PORTAL_DIRECTBUTTONS AS db
        ON db.refid = pr.refid
        INNER JOIN PORTAL_HEADER_BUTTONS AS hb
        ON hb.directbuttonname = db.name
        INNER JOIN PORTAL_HEADER AS h
        ON h.headerid = hb.headerid
        WHERE
        pr.pagename IN ('VisitPlanning')
        ) > 0
        THEN 1
        ELSE 0
        END
      </Query>
    </SqlQueries>
    <OracleQueries>
      <Query isDesigner="true" prefix="" postfix="">
        ;WITH sub_config AS (
        SELECT configid, name, 1 AS relative_depth
        FROM PORTAL_CONFIG
        WHERE name = 'TE_ISI'

        UNION ALL

        SELECT config.configid, config.name, sc.relative_depth + 1
        FROM PORTAL_CONFIG config, sub_config sc
        WHERE config.parentid = sc.configid
        )
        SELECT CASE
        WHEN
        (
        SELECT COUNT(*)
        FROM sub_config AS sc
        INNER JOIN PORTAL_PAGEREF AS pr
        ON sc.configid = pr.configid
        INNER JOIN PORTAL_MENUACTION AS ma
        ON pr.refid = ma.refid
        INNER JOIN PORTAL_MENUITEM AS mi
        ON ma.menuid = mi.menuid
        WHERE
        pr.pagename IN ('VisitPlanning')
        ) > 0 OR
        (
        SELECT COUNT(*)
        FROM sub_config AS sc
        INNER JOIN PORTAL_PAGEREF AS pr
        ON sc.configid = pr.configid
        INNER JOIN PORTAL_DIRECTBUTTONS AS db
        ON db.refid = pr.refid
        INNER JOIN PORTAL_HEADER_BUTTONS AS hb
        ON hb.directbuttonname = db.name
        INNER JOIN PORTAL_HEADER AS h
        ON h.headerid = hb.headerid
        WHERE
        pr.pagename IN ('VisitPlanning')
        ) > 0
        THEN 1
        ELSE 0
        END
      </Query>
    </OracleQueries>
  </Measurement>
  <Measurement exposedName="ACUS-54" name="Are routes adjusted based on data and events?" returnType="bool">
    <SqlQueries>
      <Query isDesigner="false" prefix="" postfix="">
        SELECT 0
      </Query>
    </SqlQueries>
    <OracleQueries>
      <Query isDesigner="false" prefix="" postfix="">SELECT 0 FROM dual</Query>
    </OracleQueries>
  </Measurement>
  <Measurement exposedName="ACUS-55" name="How much sources and events have been set up to influence the planning of routes?" returnType="int">
    <SqlQueries>
      <Query isDesigner="false" prefix="" postfix="">
        SELECT 0
      </Query>
    </SqlQueries>
    <OracleQueries>
      <Query isDesigner="false" prefix="" postfix="">SELECT 0 FROM dual</Query>
    </OracleQueries>
  </Measurement>
  <Measurement exposedName="ACUS-56" name="Are accounts and leads automatically assigned based on allocation rules?" returnType="bool">
    <SqlQueries>
      <Query isDesigner="false" prefix="" postfix="">
        SELECT CASE WHEN (SELECT COUNT(*) FROM {tablePrefix}SD) > 0
        THEN 1
        ELSE 0
        END
      </Query>
    </SqlQueries>
    <OracleQueries>
      <Query isDesigner="false" prefix="" postfix="">
        SELECT CASE WHEN (SELECT COUNT(*) FROM {tablePrefix}SD) > 0
        THEN 1
        ELSE 0
        END FROM DUAL
      </Query>
    </OracleQueries>
  </Measurement>
  <Measurement exposedName="ACUS-57" name="Do reps have the functionality to manually plan routes between relations based on proximity?" returnType="bool">
    <SqlQueries>
      <Query isDesigner="false" prefix="" postfix="">
        SELECT CASE WHEN (SELECT COUNT(*) FROM {tablePrefix}ID
        WHERE ID IN
        (
        SELECT BeaId
        FROM {tablePrefix}SV
        WHERE
        ID_FI > 0
        AND Latitude > 0
        AND Longitude > 0
        )) > 0
        THEN 1
        ELSE 0
        END
      </Query>
    </SqlQueries>
    <OracleQueries>
      <Query isDesigner="false" prefix="" postfix="">
        SELECT CASE WHEN (SELECT COUNT(*) FROM {tablePrefix}ID
        WHERE ID IN
        (
        SELECT BeaId
        FROM {tablePrefix}SV
        WHERE
        ID_FI > 0
        AND Latitude > 0
        AND Longitude > 0
        )) > 0
        THEN 1
        ELSE 0
        END FROM DUAL
      </Query>
    </OracleQueries>
  </Measurement>
  <Measurement exposedName="ACUS-58" name="Planning values are present for previous year, current year and next year" returnType="bool">
    <SqlQueries>
      <Query isDesigner="false" prefix="" postfix="">
        SELECT CASE WHEN (SELECT COUNT(*)
        FROM {tablePrefix}FC FC
        WHERE Jahr = YEAR(GETDATE()) - 1
        AND (Soll_M1 > 0 OR Soll_M2 > 0 OR Soll_M3 > 0 OR Soll_M4 > 0 OR Soll_M5 > 0 OR Soll_M6 > 0
        OR Soll_M7 > 0 OR Soll_M8 > 0 OR Soll_M9 > 0 OR Soll_M10 > 0 OR Soll_M11 > 0 OR Soll_M12 > 0)) > 0
        THEN 1
        ELSE 0
        END
      </Query>
      <Query isDesigner="false" prefix="" postfix="">
        SELECT CASE WHEN (SELECT COUNT(*)
        FROM {tablePrefix}FC FC
        WHERE Jahr = YEAR(GETDATE())
        AND (Soll_M1 > 0 OR Soll_M2 > 0 OR Soll_M3 > 0 OR Soll_M4 > 0 OR Soll_M5 > 0 OR Soll_M6 > 0
        OR Soll_M7 > 0 OR Soll_M8 > 0 OR Soll_M9 > 0 OR Soll_M10 > 0 OR Soll_M11 > 0 OR Soll_M12 > 0)) > 0
        THEN 1
        ELSE 0
        END
      </Query>
      <Query isDesigner="false" prefix="" postfix="">
        SELECT CASE WHEN (SELECT COUNT(*)
        FROM {tablePrefix}FC FC
        WHERE Jahr = YEAR(GETDATE()) + 1
        AND (Soll_M1 > 0 OR Soll_M2 > 0 OR Soll_M3 > 0 OR Soll_M4 > 0 OR Soll_M5 > 0 OR Soll_M6 > 0
        OR Soll_M7 > 0 OR Soll_M8 > 0 OR Soll_M9 > 0 OR Soll_M10 > 0 OR Soll_M11 > 0 OR Soll_M12 > 0)) > 0
        THEN 1
        ELSE 0
        END
      </Query>
    </SqlQueries>
    <OracleQueries>
      <Query isDesigner="false" prefix="" postfix="">
        SELECT CASE WHEN (SELECT COUNT(*)
        FROM {tablePrefix}FC FC
        WHERE Jahr = EXTRACT(YEAR FROM SYSTIMESTAMP) - 1
        AND (Soll_M1 > 0 OR Soll_M2 > 0 OR Soll_M3 > 0 OR Soll_M4 > 0 OR Soll_M5 > 0 OR Soll_M6 > 0
        OR Soll_M7 > 0 OR Soll_M8 > 0 OR Soll_M9 > 0 OR Soll_M10 > 0 OR Soll_M11 > 0 OR Soll_M12 > 0)) > 0
        THEN 1
        ELSE 0
        END FROM DUAL  
      </Query>
      <Query isDesigner="false" prefix="" postfix="">
        SELECT CASE WHEN (SELECT COUNT(*)
        FROM {tablePrefix}FC FC
        WHERE Jahr = EXTRACT(YEAR FROM SYSTIMESTAMP)
        AND (Soll_M1 > 0 OR Soll_M2 > 0 OR Soll_M3 > 0 OR Soll_M4 > 0 OR Soll_M5 > 0 OR Soll_M6 > 0
        OR Soll_M7 > 0 OR Soll_M8 > 0 OR Soll_M9 > 0 OR Soll_M10 > 0 OR Soll_M11 > 0 OR Soll_M12 > 0)) > 0
        THEN 1
        ELSE 0
        END FROM DUAL
      </Query>
      <Query isDesigner="false" prefix="" postfix="">
        SELECT CASE WHEN (SELECT COUNT(*)
        FROM {tablePrefix}FC FC
        WHERE Jahr = EXTRACT(YEAR FROM SYSTIMESTAMP) + 1
        AND (Soll_M1 > 0 OR Soll_M2 > 0 OR Soll_M3 > 0 OR Soll_M4 > 0 OR Soll_M5 > 0 OR Soll_M6 > 0
        OR Soll_M7 > 0 OR Soll_M8 > 0 OR Soll_M9 > 0 OR Soll_M10 > 0 OR Soll_M11 > 0 OR Soll_M12 > 0)) > 0
        THEN 1
        ELSE 0
        END FROM DUAL
      </Query>
    </OracleQueries>
  </Measurement>
  <Measurement exposedName="ACUS-59" name="Agreements for current year are in place" returnType="bool">
    <SqlQueries>
      <Query isDesigner="false" prefix="" postfix="">
        SELECT CASE WHEN (SELECT COUNT(*)
        FROM {tablePrefix}FC
        WHERE Jahr = YEAR(GETDATE())
        AND F5000 = 3) > 0
        THEN 1
        ELSE 0
        END
      </Query>
    </SqlQueries>
    <OracleQueries>
      <Query isDesigner="false" prefix="" postfix="">
        SELECT CASE WHEN (SELECT COUNT(*)
        FROM {tablePrefix}FC
        WHERE Jahr = EXTRACT(YEAR FROM SYSTIMESTAMP)
        AND F5000 = 3) > 0
        THEN 1
        ELSE 0
        END FROM DUAL
      </Query>
    </OracleQueries>
  </Measurement>
  <Measurement exposedName="ACUS-60" name="Opportunity Sales Funnel is in use" returnType="bool">
    <SqlQueries>
      <Query isDesigner="true" prefix="" postfix="">
        ;WITH sub_config AS (
        SELECT configid, name, 1 AS relative_depth
        FROM PORTAL_CONFIG
        WHERE name = 'TE_ISI'

        UNION ALL

        SELECT config.configid, config.name, sc.relative_depth + 1
        FROM PORTAL_CONFIG config, sub_config sc
        WHERE config.parentid = sc.configid
        )
        SELECT CASE WHEN (SELECT COUNT(*) FROM sub_config sc
        INNER JOIN PORTAL_MENUITEM pmi
        ON sc.configid = pmi.configid and sc.name != 'TE_ISI'
        INNER JOIN PORTAL_MENUENTRY pme
        ON pmi.menuid = pme.menuid
        where pmi.visible = 1 AND (pmi.label like '%TE_ID_NET_OpportunitySalesFunnel%' OR pme.menuentry like '%TE_ID_NET_OpportunitySalesFunnel%')) > 0
        THEN 1
        ELSE 0
        END
      </Query>
    </SqlQueries>
    <OracleQueries>
      <Query isDesigner="true" prefix="" postfix="">
        ;WITH sub_config AS (
        SELECT configid, name, 1 AS relative_depth
        FROM PORTAL_CONFIG
        WHERE name = 'TE_ISI'

        UNION ALL

        SELECT config.configid, config.name, sc.relative_depth + 1
        FROM PORTAL_CONFIG config, sub_config sc
        WHERE config.parentid = sc.configid
        )
        SELECT CASE WHEN (SELECT COUNT(*) FROM sub_config sc
        INNER JOIN PORTAL_MENUITEM pmi
        ON sc.configid = pmi.configid and sc.name != 'TE_ISI'
        INNER JOIN PORTAL_MENUENTRY pme
        ON pmi.menuid = pme.menuid
        where pmi.visible = 1 AND (pmi.label like '%TE_ID_NET_OpportunitySalesFunnel%' OR pme.menuentry like '%TE_ID_NET_OpportunitySalesFunnel%')) > 0
        THEN 1
        ELSE 0
        END
      </Query>
    </OracleQueries>
  </Measurement>
  <Measurement exposedName="ACUS-63" name="Is there an approval/reimbursement process in place?" returnType="bool">
    <SqlQueries>
      <Query isDesigner="false" prefix="" postfix="">
        SELECT CASE WHEN (SELECT COUNT(*) FROM {tablePrefix}B2) > 0
        THEN 1
        ELSE 0
        END
      </Query>
    </SqlQueries>
    <OracleQueries>
      <Query isDesigner="false" prefix="" postfix="">
        SELECT CASE WHEN (SELECT COUNT(*) FROM {tablePrefix}B2) > 0
        THEN 1
        ELSE 0
        END FROM DUAL
      </Query>
    </OracleQueries>
  </Measurement>
  <Measurement exposedName="ACUS-64" name="Are expenses linked to the corresponding Sales Activities?" returnType="bool">
    <SqlQueries>
      <Query isDesigner="false" prefix="" postfix="">
        SELECT CASE WHEN (SELECT COUNT(*) FROM {tablePrefix}B2 WHERE TAB_GENERIC IN ('MA', 'Y1', 'PR', 'AU')) > 0
        THEN 1
        ELSE 0
        END
      </Query>
    </SqlQueries>
    <OracleQueries>
      <Query isDesigner="false" prefix="" postfix="">
        SELECT CASE WHEN (SELECT COUNT(*) FROM {tablePrefix}B2 WHERE TAB_GENERIC IN ('MA', 'Y1', 'PR', 'AU')) > 0
        THEN 1
        ELSE 0
        END FROM DUAL
      </Query>
    </OracleQueries>
  </Measurement>
  <Measurement exposedName="ACUS-65" name="All accounts have their visiting hours maintained" returnType="int">
    <SqlQueries>
      <Query isDesigner="false" prefix="" postfix="">
        SELECT ISNULL(CEILING((COUNT(DISTINCT ct.ID_FI)*100.0)/COUNT(fi.ID)), 0)
        FROM {tablePrefix}FI fi
        LEFT OUTER JOIN {tablePrefix}CT ct
        ON fi.ID = ct.ID_FI AND ct.Typ = 1
      </Query>
    </SqlQueries>
    <OracleQueries>
      <Query isDesigner="false" prefix="" postfix="">
        SELECT NVL(CEIL((COUNT(DISTINCT ct.ID_FI)*100.0)/COUNT(fi.ID)), 0)
        FROM {tablePrefix}FI fi
        LEFT OUTER JOIN {tablePrefix}CT ct
        ON fi.ID = ct.ID_FI AND ct.Typ = 1
      </Query>
      <Query isDesigner="false" prefix="" postfix="">select count(*) from {tablePrefix}FI</Query>
    </OracleQueries>
  </Measurement>
  <Measurement exposedName="ACUS-68" name="Case management process implemented to enforce required workflow?" returnType="bool">
    <SqlQueries>
      <Query isDesigner="false" prefix="" postfix="">
        SELECT CASE WHEN (SELECT COUNT(*) FROM {tablePrefix}KM) > 0
        THEN 1
        ELSE 0
        END
      </Query>
    </SqlQueries>
    <OracleQueries>
      <Query isDesigner="false" prefix="" postfix="">
        SELECT CASE WHEN (SELECT COUNT(*) FROM {tablePrefix}KM) > 0
        THEN 1
        ELSE 0
        END FROM DUAL
      </Query>
    </OracleQueries>
  </Measurement>
  <Measurement exposedName="ACUS-70" name="For how much of the cases in the system has a question been generated in Jive?" returnType="int">
    <SqlQueries>
      <Query isDesigner="false" prefix="" postfix="">
        SELECT 0
      </Query>
    </SqlQueries>
    <OracleQueries>
      <Query isDesigner="false" prefix="" postfix="">
        SELECT 0 FROM dual
      </Query>
    </OracleQueries>
  </Measurement>
  <Measurement exposedName="ACUS-71" name="Real time chat implemented?" returnType="bool">
    <SqlQueries>
      <Query isDesigner="false" prefix="" postfix="">SELECT 0</Query>
    </SqlQueries>
    <OracleQueries>
      <Query isDesigner="false" prefix="" postfix="">
        SELECT 0 FROM dual
      </Query>
    </OracleQueries>
  </Measurement>
  <Measurement exposedName="ACUS-72" name="How many chats are sent on average on a monthly basis per user?" returnType="int">
    <SqlQueries>
      <Query isDesigner="false" prefix="" postfix="">SELECT 0</Query>
    </SqlQueries>
    <OracleQueries>
      <Query isDesigner="false" prefix="" postfix="">
        SELECT 0 FROM dual
      </Query>
    </OracleQueries>
  </Measurement>
  <Measurement exposedName="ACUS-74" name="Social inbox process implemented to enforce required workflow?" returnType="bool">
    <SqlQueries>
      <Query isDesigner="false" prefix="" postfix="">
        SELECT CASE WHEN (SELECT COUNT(*) FROM {tablePrefix}SE) > 0
        THEN 1
        ELSE 0
        END
      </Query>
    </SqlQueries>
    <OracleQueries>
      <Query isDesigner="false" prefix="" postfix="">
        SELECT CASE WHEN (SELECT COUNT(*) FROM {tablePrefix}SE) > 0
        THEN 1
        ELSE 0
        END FROM DUAL
      </Query>
    </OracleQueries>
  </Measurement>
  <Measurement exposedName="ACUS-76" name="KB article browsing present to improve case solution efficiency and quality?" returnType="bool">
    <SqlQueries>
      <Query isDesigner="false" prefix="" postfix="">
        SELECT CASE WHEN (SELECT COUNT(*) FROM {tablePrefix}U000) > 0
        THEN 1
        ELSE 0
        END
      </Query>
    </SqlQueries>
    <OracleQueries>
      <Query isDesigner="false" prefix="" postfix="">
        SELECT CASE WHEN (SELECT COUNT(*) FROM {tablePrefix}U000) > 0
        THEN 1
        ELSE 0
        END FROM DUAL
      </Query>
    </OracleQueries>
  </Measurement>
  <Measurement exposedName="ACUS-78" name="Can you assign an engineer based on the planning and availability of the field engineer?" returnType="bool">
    <SqlQueries>
      <Query isDesigner="true" prefix="" postfix="">
        ;WITH sub_config AS (
        SELECT configid, name, 1 AS relative_depth
        FROM PORTAL_CONFIG
        WHERE name = 'TE_ISI'

        UNION ALL

        SELECT config.configid, config.name, sc.relative_depth + 1
        FROM PORTAL_CONFIG config, sub_config sc
        WHERE config.parentid = sc.configid
        )
        SELECT CASE WHEN (SELECT COUNT(*) FROM sub_config sc
        INNER JOIN PORTAL_MENUITEM pmi
        ON sc.configid = pmi.configid and sc.name != 'TE_ISI'
        INNER JOIN PORTAL_MENUENTRY pme
        ON pmi.menuid = pme.menuid
        where pmi.visible = 1 AND (pmi.label like '%ID_NET_DISPATCHING_DASHBOARD%' OR pme.menuentry like '%ID_NET_DISPATCHING_DASHBOARD%')) > 0
        THEN 1
        ELSE 0
        END
      </Query>
    </SqlQueries>
    <OracleQueries>
      <Query isDesigner="true" prefix="" postfix="">
        ;WITH sub_config AS (
        SELECT configid, name, 1 AS relative_depth
        FROM PORTAL_CONFIG
        WHERE name = 'TE_ISI'

        UNION ALL

        SELECT config.configid, config.name, sc.relative_depth + 1
        FROM PORTAL_CONFIG config, sub_config sc
        WHERE config.parentid = sc.configid
        )
        SELECT CASE WHEN (SELECT COUNT(*) FROM sub_config sc
        INNER JOIN PORTAL_MENUITEM pmi
        ON sc.configid = pmi.configid and sc.name != 'TE_ISI'
        INNER JOIN PORTAL_MENUENTRY pme
        ON pmi.menuid = pme.menuid
        where pmi.visible = 1 AND (pmi.label like '%ID_NET_DISPATCHING_DASHBOARD%' OR pme.menuentry like '%ID_NET_DISPATCHING_DASHBOARD%')) > 0
        THEN 1
        ELSE 0
        END
      </Query>
    </OracleQueries>
  </Measurement>
  <Measurement exposedName="ACUS-79" name="is it possible to assign cases to agents and/or fields engineers based on a match between certain attributes of the case and the agent/engineer (eg. based on expertise)?" returnType="bool">
    <SqlQueries>
      <Query isDesigner="false" prefix="" postfix="">
        SELECT CASE WHEN ((SELECT COUNT(*) FROM {tablePrefix}SI) > 0 AND (SELECT COUNT(*) FROM {tablePrefix}MA) >0)
        THEN 1
        ELSE 0
        END
      </Query>
    </SqlQueries>
    <OracleQueries>
      <Query isDesigner="false" prefix="" postfix="">
        SELECT CASE WHEN ((SELECT COUNT(*) FROM {tablePrefix}SI) > 0 AND (SELECT COUNT(*) FROM {tablePrefix}MA) >0)
        THEN 1
        ELSE 0
        END FROM DUAL
      </Query>
    </OracleQueries>
  </Measurement>
  <Measurement exposedName="ACUS-80" name="Are you storing service levels agreed in service contracts in the system, enabling you to measure solving/responding to cases based on service level compliance per customer?" returnType="bool">
    <SqlQueries>
      <Query isDesigner="false" prefix="" postfix="">
        SELECT CASE WHEN ((SELECT COUNT(*) FROM {tablePrefix}WR) > 0 AND (SELECT COUNT(*) FROM {tablePrefix}WP) > 0)
        THEN 1
        ELSE 0
        END
      </Query>
    </SqlQueries>
    <OracleQueries>
      <Query isDesigner="false" prefix="" postfix="">
        SELECT CASE WHEN ((SELECT COUNT(*) FROM {tablePrefix}WR) > 0 AND (SELECT COUNT(*) FROM {tablePrefix}WP) > 0)
        THEN 1
        ELSE 0
        END FROM DUAL
      </Query>
    </OracleQueries>
  </Measurement>
  <Measurement exposedName="ACUS-83" name="All completed service offers have a service offer report, which was sent to the customer via CRM?" returnType="int">
    <SqlQueries>
      <Query isDesigner="false" prefix="" postfix="">
        SELECT ISNULL(CEILING(SUM(CASE WHEN F5045 = 1
        THEN 1
        ELSE 0
        END) *100.0 / COUNT(*)), 0)
        FROM {tablePrefix}PR
      </Query>
    </SqlQueries>
    <OracleQueries>
      <Query isDesigner="false" prefix="" postfix="">
        SELECT NVL(CEIL(SUM(CASE WHEN F5045 = 1
        THEN 1
        ELSE 0
        END) *100.0 / COUNT(*)), 0)
        FROM {tablePrefix}PR
      </Query>
    </OracleQueries>
  </Measurement>
  <Measurement exposedName="ACUS-84" name="All completed service offers have an installed base item associated with them?" returnType="int">
    <SqlQueries>
      <Query isDesigner="false" prefix="" postfix="">
        SELECT ISNULL(CEILING(SUM(CASE WHEN ib.ID_AU IS NOT NULL
        THEN 1
        ELSE 0
        END) * 100.0 / COUNT(pr.ID)), 0)
        FROM {tablePrefix}PR pr
        LEFT OUTER JOIN {tablePrefix}AU au
        ON au.ID_PR = pr.ID
        LEFT OUTER JOIN {tablePrefix}IB ib
        ON ib.ID_AU = au.ID;
      </Query>
    </SqlQueries>
    <OracleQueries>
      <Query isDesigner="false" prefix="" postfix="">
        SELECT NVL(CEIL(SUM(CASE WHEN ib.ID_AU IS NOT NULL
        THEN 1
        ELSE 0
        END) * 100.0 / COUNT(pr.ID)), 0)
        FROM {tablePrefix}PR pr
        LEFT OUTER JOIN {tablePrefix}AU au
        ON au.ID_PR = pr.ID
        LEFT OUTER JOIN {tablePrefix}IB ib
        ON ib.ID_AU = au.ID
      </Query>
    </OracleQueries>
  </Measurement>
  <Measurement exposedName="ACUS-88" name="Is Campaign Collaboration enabled?" returnType="bool">
    <SqlQueries>
      <Query isDesigner="false" prefix="" postfix="">SELECT 0</Query>
    </SqlQueries>
    <OracleQueries>
      <Query isDesigner="false" prefix="" postfix="">SELECT 0 FROM dual</Query>
    </OracleQueries>
  </Measurement>
  <Measurement exposedName="ACUS-89" name="For how much of the campaigns has a collaboration link been created?" returnType="int">
    <SqlQueries>
      <Query isDesigner="false" prefix="" postfix="">SELECT 0</Query>
    </SqlQueries>
    <OracleQueries>
      <Query isDesigner="false" prefix="" postfix="">SELECT 0 FROM dual</Query>
    </OracleQueries>
  </Measurement>
  <Measurement exposedName="ACUS-92" name="Is it possible to select data on all attributes in the database?" returnType="bool">
    <SqlQueries>
      <Query isDesigner="false" prefix="" postfix="">
        SELECT CASE WHEN (SELECT COUNT(*) FROM {tablePrefix}FT WHERE FmtTyp=32) > 0
        THEN 1
        ELSE 0
        END
      </Query>
    </SqlQueries>
    <OracleQueries>
      <Query isDesigner="false" prefix="" postfix="">
        SELECT CASE WHEN (SELECT COUNT(*) FROM {tablePrefix}FT WHERE FmtTyp=32) > 0
        THEN 1
        ELSE 0
        END FROM DUAL
      </Query>
    </OracleQueries>
  </Measurement>
  <Measurement exposedName="ACUS-94" name="Is the system providing hints and suggestions during creation of a target group, based on patterns detected through artificial intelligence to make the campaign budget be spent more efficiently?" returnType="bool">
    <SqlQueries>
      <Query isDesigner="false" prefix="" postfix="">SELECT 0</Query>
    </SqlQueries>
    <OracleQueries>
      <Query isDesigner="false" prefix="" postfix="">SELECT 0 FROM dual</Query>
    </OracleQueries>
  </Measurement>
  <Measurement exposedName="ACUS-100" name="Is Surveys set up for lead qualification?" returnType="bool">
    <SqlQueries>
      <Query isDesigner="false" prefix="" postfix="">
        SELECT CASE WHEN (SELECT COUNT(*) FROM {tablePrefix}U1 U1
        INNER JOIN {tablePrefix}FI FI
        ON U1.ID_FI = FI.ID
        OR (U1.ID_GENERIC = FI.ID AND U1.LinkTyp = 'FI')) >0
        THEN 1
        ELSE 0
        END
      </Query>
    </SqlQueries>
    <OracleQueries>
      <Query isDesigner="false" prefix="" postfix="">
        SELECT CASE WHEN (SELECT COUNT(*) FROM {tablePrefix}U1 U1
        INNER JOIN {tablePrefix}FI FI
        ON U1.ID_FI = FI.ID
        OR (U1.ID_GENERIC = FI.ID AND U1.LinkTyp = 'FI')) >0
        THEN 1
        ELSE 0
        END FROM DUAL
      </Query>
    </OracleQueries>
  </Measurement>
  <Measurement exposedName="ACUS-101" name="Is Predictive CRM enabled?" returnType="bool">
    <SqlQueries>
      <Query isDesigner="false" prefix="" postfix="">
        SELECT 0
      </Query>
    </SqlQueries>
    <OracleQueries>
      <Query isDesigner="false" prefix="" postfix="">SELECT 0 FROM dual</Query>
    </OracleQueries>
  </Measurement>
  <Measurement exposedName="ACUS-104" name="Is Managing Events enabled?" returnType="bool">
    <SqlQueries>
      <Query isDesigner="false" prefix="" postfix="">
        SELECT CASE WHEN (SELECT COUNT(*) FROM {tablePrefix}CM WHERE KampTyp = 1) > 0
        THEN 1
        ELSE 0
        END
      </Query>
    </SqlQueries>
    <OracleQueries>
      <Query isDesigner="false" prefix="" postfix="">
        SELECT CASE WHEN (SELECT COUNT(*) FROM {tablePrefix}CM WHERE KampTyp = 1) > 0
        THEN 1
        ELSE 0
        END FROM DUAL
      </Query>
    </OracleQueries>
  </Measurement>
  <Measurement exposedName="ACUS-105" name="Is Mobile Sample Management set up?" returnType="bool">
    <SqlQueries>
      <Query isDesigner="true" prefix="" postfix="">
        SELECT 0
      </Query>
    </SqlQueries>
    <OracleQueries>
      <Query isDesigner="true" prefix="" postfix="">
        SELECT 0
      </Query>
    </OracleQueries>
  </Measurement>
  <Measurement exposedName="ACUS-106" name="Is Mobile Property Management set up?" returnType="bool">
    <SqlQueries>
      <Query isDesigner="true" prefix="" postfix="">
        ;WITH sub_config AS (
        SELECT configid, name, 1 AS relative_depth
        FROM PORTAL_CONFIG
        WHERE name = 'TE_ISI_TABLET'

        UNION ALL

        SELECT config.configid, config.name, sc.relative_depth + 1
        FROM PORTAL_CONFIG config, sub_config sc
        WHERE config.parentid = sc.configid
        )
        SELECT CASE WHEN (SELECT COUNT(*) FROM sub_config sc
        INNER JOIN PORTAL_MENUITEM pmi
        ON sc.configid = pmi.configid and sc.name != 'TE_ISI_TABLET'
        INNER JOIN PORTAL_MENUENTRY pme
        ON pmi.menuid = pme.menuid
        where pmi.visible = 1 AND (pmi.label like '%TE_LIST_OJ%' OR pme.menuentry like '%TE_LIST_OJ%')
        ) > 0
        THEN 1
        ELSE 0
        END
      </Query>
    </SqlQueries>
    <OracleQueries>
      <Query isDesigner="true" prefix="" postfix="">
        ;WITH sub_config AS (
        SELECT configid, name, 1 AS relative_depth
        FROM PORTAL_CONFIG
        WHERE name = 'TE_ISI_TABLET'

        UNION ALL

        SELECT config.configid, config.name, sc.relative_depth + 1
        FROM PORTAL_CONFIG config, sub_config sc
        WHERE config.parentid = sc.configid
        )
        SELECT CASE WHEN (SELECT COUNT(*) FROM sub_config sc
        INNER JOIN PORTAL_MENUITEM pmi
        ON sc.configid = pmi.configid and sc.name != 'TE_ISI_TABLET'
        INNER JOIN PORTAL_MENUENTRY pme
        ON pmi.menuid = pme.menuid
        where pmi.visible = 1 AND (pmi.label like '%TE_LIST_OJ%' OR pme.menuentry like '%TE_LIST_OJ%')
        ) > 0
        THEN 1
        ELSE 0
        END
      </Query>
    </OracleQueries>
  </Measurement>
  <Measurement exposedName="ACUS-107" name="Is Mobile Offer Management set up?" returnType="bool">
    <SqlQueries>
      <Query isDesigner="true" prefix="" postfix="">
        ;WITH sub_config AS (
        SELECT configid, name, 1 AS relative_depth
        FROM PORTAL_CONFIG
        WHERE name = 'TE_ISI_TABLET'

        UNION ALL

        SELECT config.configid, config.name, sc.relative_depth + 1
        FROM PORTAL_CONFIG config, sub_config sc
        WHERE config.parentid = sc.configid
        )
        SELECT CASE WHEN (SELECT COUNT(*) FROM sub_config sc
        INNER JOIN PORTAL_MENUITEM pmi
        ON sc.configid = pmi.configid and sc.name != 'TE_ISI_TABLET'
        INNER JOIN PORTAL_MENUENTRY pme
        ON pmi.menuid = pme.menuid
        where pmi.visible = 1 AND (pmi.label like '%LIST_PR%' OR pme.menuentry like '%LIST_PR%')
        ) > 0
        THEN 1
        ELSE 0
        END
      </Query>
    </SqlQueries>
    <OracleQueries>
      <Query isDesigner="true" prefix="" postfix="">
        ;WITH sub_config AS (
        SELECT configid, name, 1 AS relative_depth
        FROM PORTAL_CONFIG
        WHERE name = 'TE_ISI_TABLET'

        UNION ALL

        SELECT config.configid, config.name, sc.relative_depth + 1
        FROM PORTAL_CONFIG config, sub_config sc
        WHERE config.parentid = sc.configid
        )
        SELECT CASE WHEN (SELECT COUNT(*) FROM sub_config sc
        INNER JOIN PORTAL_MENUITEM pmi
        ON sc.configid = pmi.configid and sc.name != 'TE_ISI_TABLET'
        INNER JOIN PORTAL_MENUENTRY pme
        ON pmi.menuid = pme.menuid
        where pmi.visible = 1 AND (pmi.label like '%LIST_PR%' OR pme.menuentry like '%LIST_PR%')
        ) > 0
        THEN 1
        ELSE 0
        END
      </Query>
    </OracleQueries>
  </Measurement>
  <Measurement exposedName="ACUS-108" name="Is Mobile Order Management set up?" returnType="bool">
    <SqlQueries>
      <Query isDesigner="true" prefix="" postfix="">
        SELECT 0
      </Query>
    </SqlQueries>
    <OracleQueries>
      <Query isDesigner="true" prefix="" postfix="">
        SELECT 0
      </Query>
    </OracleQueries>
  </Measurement>
  <Measurement exposedName="ACUS-109" name="Is Mobile Sales Planning set up?" returnType="bool">
    <SqlQueries>
      <Query isDesigner="true" prefix="" postfix="">
        SELECT 0
      </Query>
    </SqlQueries>
    <OracleQueries>
      <Query isDesigner="true" prefix="" postfix="">
        SELECT 0
      </Query>
    </OracleQueries>
  </Measurement>
  <Measurement exposedName="ACUS-110" name="Do you have reports set up on the Opportunity IA?" returnType="bool">
    <SqlQueries>
      <Query isDesigner="true" prefix="" postfix="">
        ;WITH sub_config AS (
        SELECT configid, name, 1 AS relative_depth
        FROM PORTAL_CONFIG
        WHERE name = 'TE_ISI'

        UNION ALL

        SELECT config.configid, config.name, sc.relative_depth + 1
        FROM PORTAL_CONFIG config, sub_config sc
        WHERE config.parentid = sc.configid
        )
        SELECT CASE
        WHEN
        (
        SELECT COUNT(*)
        FROM sub_config AS sc
        INNER JOIN PORTAL_PAGEREF AS pr
        ON sc.configid = pr.configid and sc.name != 'TE_ISI'
        INNER JOIN PORTAL_MENUACTION AS ma
        ON pr.refid = ma.refid
        INNER JOIN PORTAL_MENUITEM AS mi
        ON ma.menuid = mi.menuid
        WHERE
        pr.pagename IN ('ExecuteReport', 'QueryReport')
        AND mi.visible = 1
        AND mi.label like '%_Y1_%'
        ) > 0 OR
        (
        SELECT COUNT(*)
        FROM sub_config AS sc
        INNER JOIN PORTAL_PAGEREF AS pr
        ON sc.configid = pr.configid and sc.name != 'TE_ISI'
        INNER JOIN PORTAL_DIRECTBUTTONS AS db
        ON db.refid = pr.refid
        INNER JOIN PORTAL_HEADER_BUTTONS AS hb
        ON hb.directbuttonname = db.name
        INNER JOIN PORTAL_HEADER AS h
        ON h.headerid = hb.headerid
        WHERE
        pr.pagename IN ('ExecuteReport', 'QueryReport')
        AND (db.name like '%_Y1_%' OR hb.directbuttonname like '%_Y1_%')
        ) > 0
        THEN 1
        ELSE 0
        END
      </Query>
    </SqlQueries>
    <OracleQueries>
      <Query isDesigner="true" prefix="" postfix="">
        ;WITH sub_config AS (
        SELECT configid, name, 1 AS relative_depth
        FROM PORTAL_CONFIG
        WHERE name = 'TE_ISI'

        UNION ALL

        SELECT config.configid, config.name, sc.relative_depth + 1
        FROM PORTAL_CONFIG config, sub_config sc
        WHERE config.parentid = sc.configid
        )
        SELECT CASE
        WHEN
        (
        SELECT COUNT(*)
        FROM sub_config AS sc
        INNER JOIN PORTAL_PAGEREF AS pr
        ON sc.configid = pr.configid and sc.name != 'TE_ISI'
        INNER JOIN PORTAL_MENUACTION AS ma
        ON pr.refid = ma.refid
        INNER JOIN PORTAL_MENUITEM AS mi
        ON ma.menuid = mi.menuid
        WHERE
        pr.pagename IN ('ExecuteReport', 'QueryReport')
        AND mi.visible = 1
        AND mi.label like '%_Y1_%'
        ) > 0 OR
        (
        SELECT COUNT(*)
        FROM sub_config AS sc
        INNER JOIN PORTAL_PAGEREF AS pr
        ON sc.configid = pr.configid and sc.name != 'TE_ISI'
        INNER JOIN PORTAL_DIRECTBUTTONS AS db
        ON db.refid = pr.refid
        INNER JOIN PORTAL_HEADER_BUTTONS AS hb
        ON hb.directbuttonname = db.name
        INNER JOIN PORTAL_HEADER AS h
        ON h.headerid = hb.headerid
        WHERE
        pr.pagename IN ('ExecuteReport', 'QueryReport')
        AND (db.name like '%_Y1_%' OR hb.directbuttonname like '%_Y1_%')
        ) > 0
        THEN 1
        ELSE 0
        END
      </Query>
    </OracleQueries>
  </Measurement>
  <Measurement exposedName="ACUS-113" name="Do you have reports set up on samples?" returnType="bool">
    <SqlQueries>
      <Query isDesigner="true" prefix="" postfix="">
        ;WITH sub_config AS (
        SELECT configid, name, 1 AS relative_depth
        FROM PORTAL_CONFIG
        WHERE name = 'TE_ISI'

        UNION ALL

        SELECT config.configid, config.name, sc.relative_depth + 1
        FROM PORTAL_CONFIG config, sub_config sc
        WHERE config.parentid = sc.configid
        )
        SELECT CASE
        WHEN
        (
        SELECT COUNT(*)
        FROM sub_config AS sc
        INNER JOIN PORTAL_PAGEREF AS pr
        ON sc.configid = pr.configid and sc.name != 'TE_ISI'
        INNER JOIN PORTAL_MENUACTION AS ma
        ON pr.refid = ma.refid
        INNER JOIN PORTAL_MENUITEM AS mi
        ON ma.menuid = mi.menuid
        WHERE
        pr.pagename IN ('ExecuteReport', 'QueryReport')
        AND mi.visible = 1
        AND LOWER(mi.label) like '%sample%'
        ) > 0 OR
        (
        SELECT COUNT(*)
        FROM sub_config AS sc
        INNER JOIN PORTAL_PAGEREF AS pr
        ON sc.configid = pr.configid and sc.name != 'TE_ISI'
        INNER JOIN PORTAL_DIRECTBUTTONS AS db
        ON db.refid = pr.refid
        INNER JOIN PORTAL_HEADER_BUTTONS AS hb
        ON hb.directbuttonname = db.name
        INNER JOIN PORTAL_HEADER AS h
        ON h.headerid = hb.headerid
        WHERE
        pr.pagename IN ('ExecuteReport', 'QueryReport')
        AND (LOWER(db.name) like '%sample%' OR LOWER(hb.directbuttonname) like '%sample%')
        ) > 0
        THEN 1
        ELSE 0
        END
      </Query>
    </SqlQueries>
    <OracleQueries>
      <Query isDesigner="true" prefix="" postfix="">
        ;WITH sub_config AS (
        SELECT configid, name, 1 AS relative_depth
        FROM PORTAL_CONFIG
        WHERE name = 'TE_ISI'

        UNION ALL

        SELECT config.configid, config.name, sc.relative_depth + 1
        FROM PORTAL_CONFIG config, sub_config sc
        WHERE config.parentid = sc.configid
        )
        SELECT CASE
        WHEN
        (
        SELECT COUNT(*)
        FROM sub_config AS sc
        INNER JOIN PORTAL_PAGEREF AS pr
        ON sc.configid = pr.configid and sc.name != 'TE_ISI'
        INNER JOIN PORTAL_MENUACTION AS ma
        ON pr.refid = ma.refid
        INNER JOIN PORTAL_MENUITEM AS mi
        ON ma.menuid = mi.menuid
        WHERE
        pr.pagename IN ('ExecuteReport', 'QueryReport')
        AND mi.visible = 1
        AND LOWER(mi.label) like '%sample%'
        ) > 0 OR
        (
        SELECT COUNT(*)
        FROM sub_config AS sc
        INNER JOIN PORTAL_PAGEREF AS pr
        ON sc.configid = pr.configid and sc.name != 'TE_ISI'
        INNER JOIN PORTAL_DIRECTBUTTONS AS db
        ON db.refid = pr.refid
        INNER JOIN PORTAL_HEADER_BUTTONS AS hb
        ON hb.directbuttonname = db.name
        INNER JOIN PORTAL_HEADER AS h
        ON h.headerid = hb.headerid
        WHERE
        pr.pagename IN ('ExecuteReport', 'QueryReport')
        AND (LOWER(db.name) like '%sample%' OR LOWER(hb.directbuttonname) like '%sample%')
        ) > 0
        THEN 1
        ELSE 0
        END
      </Query>
    </OracleQueries>
  </Measurement>
  <Measurement exposedName="ACUS-116" name="Do you have reports set up on bids?" returnType="bool">
    <SqlQueries>
      <Query isDesigner="true" prefix="" postfix="">
        SELECT 0
      </Query>
    </SqlQueries>
    <OracleQueries>
      <Query isDesigner="true" prefix="" postfix="">
        SELECT 0
      </Query>
    </OracleQueries>
  </Measurement>
  <Measurement exposedName="ACUS-119" name="Do you have reports set up on properties?" returnType="bool">
    <SqlQueries>
      <Query isDesigner="true" prefix="" postfix="">
        ;WITH sub_config AS (
        SELECT configid, name, 1 AS relative_depth
        FROM PORTAL_CONFIG
        WHERE name = 'TE_ISI'

        UNION ALL

        SELECT config.configid, config.name, sc.relative_depth + 1
        FROM PORTAL_CONFIG config, sub_config sc
        WHERE config.parentid = sc.configid
        )
        SELECT CASE
        WHEN
        (
        SELECT COUNT(*)
        FROM sub_config AS sc
        INNER JOIN PORTAL_PAGEREF AS pr
        ON sc.configid = pr.configid and sc.name != 'TE_ISI'
        INNER JOIN PORTAL_MENUACTION AS ma
        ON pr.refid = ma.refid
        INNER JOIN PORTAL_MENUITEM AS mi
        ON ma.menuid = mi.menuid
        WHERE
        pr.pagename IN ('ExecuteReport', 'QueryReport')
        AND mi.visible = 1
        AND LOWER(mi.label) like '%_oj_%'
        ) > 0 OR
        (
        SELECT COUNT(*)
        FROM sub_config AS sc
        INNER JOIN PORTAL_PAGEREF AS pr
        ON sc.configid = pr.configid and sc.name != 'TE_ISI'
        INNER JOIN PORTAL_DIRECTBUTTONS AS db
        ON db.refid = pr.refid
        INNER JOIN PORTAL_HEADER_BUTTONS AS hb
        ON hb.directbuttonname = db.name
        INNER JOIN PORTAL_HEADER AS h
        ON h.headerid = hb.headerid
        WHERE
        pr.pagename IN ('ExecuteReport', 'QueryReport')
        AND (LOWER(db.name) like '%_oj_%' OR LOWER(hb.directbuttonname) like '%_oj_%')
        ) > 0
        THEN 1
        ELSE 0
        END
      </Query>
    </SqlQueries>
    <OracleQueries>
      <Query isDesigner="true" prefix="" postfix="">
        ;WITH sub_config AS (
        SELECT configid, name, 1 AS relative_depth
        FROM PORTAL_CONFIG
        WHERE name = 'TE_ISI'

        UNION ALL

        SELECT config.configid, config.name, sc.relative_depth + 1
        FROM PORTAL_CONFIG config, sub_config sc
        WHERE config.parentid = sc.configid
        )
        SELECT CASE
        WHEN
        (
        SELECT COUNT(*)
        FROM sub_config AS sc
        INNER JOIN PORTAL_PAGEREF AS pr
        ON sc.configid = pr.configid and sc.name != 'TE_ISI'
        INNER JOIN PORTAL_MENUACTION AS ma
        ON pr.refid = ma.refid
        INNER JOIN PORTAL_MENUITEM AS mi
        ON ma.menuid = mi.menuid
        WHERE
        pr.pagename IN ('ExecuteReport', 'QueryReport')
        AND mi.visible = 1
        AND LOWER(mi.label) like '%_oj_%'
        ) > 0 OR
        (
        SELECT COUNT(*)
        FROM sub_config AS sc
        INNER JOIN PORTAL_PAGEREF AS pr
        ON sc.configid = pr.configid and sc.name != 'TE_ISI'
        INNER JOIN PORTAL_DIRECTBUTTONS AS db
        ON db.refid = pr.refid
        INNER JOIN PORTAL_HEADER_BUTTONS AS hb
        ON hb.directbuttonname = db.name
        INNER JOIN PORTAL_HEADER AS h
        ON h.headerid = hb.headerid
        WHERE
        pr.pagename IN ('ExecuteReport', 'QueryReport')
        AND (LOWER(db.name) like '%_oj_%' OR LOWER(hb.directbuttonname) like '%_oj_%')
        ) > 0
        THEN 1
        ELSE 0
        END
      </Query>
    </OracleQueries>
  </Measurement>
  <Measurement exposedName="ACUS-122" name="Do you have reports set up on offers?" returnType="bool">
    <SqlQueries>
      <Query isDesigner="true" prefix="" postfix="">
        ;WITH sub_config AS (
        SELECT configid, name, 1 AS relative_depth
        FROM PORTAL_CONFIG
        WHERE name = 'TE_ISI'

        UNION ALL

        SELECT config.configid, config.name, sc.relative_depth + 1
        FROM PORTAL_CONFIG config, sub_config sc
        WHERE config.parentid = sc.configid
        )
        SELECT CASE
        WHEN
        (
        SELECT COUNT(*)
        FROM sub_config AS sc
        INNER JOIN PORTAL_PAGEREF AS pr
        ON sc.configid = pr.configid and sc.name != 'TE_ISI'
        INNER JOIN PORTAL_MENUACTION AS ma
        ON pr.refid = ma.refid
        INNER JOIN PORTAL_MENUITEM AS mi
        ON ma.menuid = mi.menuid
        WHERE
        pr.pagename IN ('ExecuteReport', 'QueryReport')
        AND mi.visible = 1
        AND LOWER(mi.label) like '%_pr_%'
        ) > 0 OR
        (
        SELECT COUNT(*)
        FROM sub_config AS sc
        INNER JOIN PORTAL_PAGEREF AS pr
        ON sc.configid = pr.configid and sc.name != 'TE_ISI'
        INNER JOIN PORTAL_DIRECTBUTTONS AS db
        ON db.refid = pr.refid
        INNER JOIN PORTAL_HEADER_BUTTONS AS hb
        ON hb.directbuttonname = db.name
        INNER JOIN PORTAL_HEADER AS h
        ON h.headerid = hb.headerid
        WHERE
        pr.pagename IN ('ExecuteReport', 'QueryReport')
        AND (LOWER(db.name) like '%_pr_%' OR LOWER(hb.directbuttonname) like '%_pr_%')
        ) > 0
        THEN 1
        ELSE 0
        END
      </Query>
    </SqlQueries>
    <OracleQueries>
      <Query isDesigner="true" prefix="" postfix="">
        ;WITH sub_config AS (
        SELECT configid, name, 1 AS relative_depth
        FROM PORTAL_CONFIG
        WHERE name = 'TE_ISI'

        UNION ALL

        SELECT config.configid, config.name, sc.relative_depth + 1
        FROM PORTAL_CONFIG config, sub_config sc
        WHERE config.parentid = sc.configid
        )
        SELECT CASE
        WHEN
        (
        SELECT COUNT(*)
        FROM sub_config AS sc
        INNER JOIN PORTAL_PAGEREF AS pr
        ON sc.configid = pr.configid and sc.name != 'TE_ISI'
        INNER JOIN PORTAL_MENUACTION AS ma
        ON pr.refid = ma.refid
        INNER JOIN PORTAL_MENUITEM AS mi
        ON ma.menuid = mi.menuid
        WHERE
        pr.pagename IN ('ExecuteReport', 'QueryReport')
        AND mi.visible = 1
        AND LOWER(mi.label) like '%_pr_%'
        ) > 0 OR
        (
        SELECT COUNT(*)
        FROM sub_config AS sc
        INNER JOIN PORTAL_PAGEREF AS pr
        ON sc.configid = pr.configid and sc.name != 'TE_ISI'
        INNER JOIN PORTAL_DIRECTBUTTONS AS db
        ON db.refid = pr.refid
        INNER JOIN PORTAL_HEADER_BUTTONS AS hb
        ON hb.directbuttonname = db.name
        INNER JOIN PORTAL_HEADER AS h
        ON h.headerid = hb.headerid
        WHERE
        pr.pagename IN ('ExecuteReport', 'QueryReport')
        AND (LOWER(db.name) like '%_pr_%' OR LOWER(hb.directbuttonname) like '%_pr_%')
        ) > 0
        THEN 1
        ELSE 0
        END
      </Query>
    </OracleQueries>
  </Measurement>
  <Measurement exposedName="ACUS-125" name="Do you have reports set up on orders?" returnType="bool">
    <SqlQueries>
      <Query isDesigner="true" prefix="" postfix="">
        ;WITH sub_config AS (
        SELECT configid, name, 1 AS relative_depth
        FROM PORTAL_CONFIG
        WHERE name = 'TE_ISI'

        UNION ALL

        SELECT config.configid, config.name, sc.relative_depth + 1
        FROM PORTAL_CONFIG config, sub_config sc
        WHERE config.parentid = sc.configid
        )
        SELECT CASE
        WHEN
        (
        SELECT COUNT(*)
        FROM sub_config AS sc
        INNER JOIN PORTAL_PAGEREF AS pr
        ON sc.configid = pr.configid and sc.name != 'TE_ISI'
        INNER JOIN PORTAL_MENUACTION AS ma
        ON pr.refid = ma.refid
        INNER JOIN PORTAL_MENUITEM AS mi
        ON ma.menuid = mi.menuid
        WHERE
        pr.pagename IN ('ExecuteReport', 'QueryReport')
        AND mi.visible = 1
        AND LOWER(mi.label) like '%_au_%'
        ) > 0 OR
        (
        SELECT COUNT(*)
        FROM sub_config AS sc
        INNER JOIN PORTAL_PAGEREF AS pr
        ON sc.configid = pr.configid and sc.name != 'TE_ISI'
        INNER JOIN PORTAL_DIRECTBUTTONS AS db
        ON db.refid = pr.refid
        INNER JOIN PORTAL_HEADER_BUTTONS AS hb
        ON hb.directbuttonname = db.name
        INNER JOIN PORTAL_HEADER AS h
        ON h.headerid = hb.headerid
        WHERE
        pr.pagename IN ('ExecuteReport', 'QueryReport')
        AND (LOWER(db.name) like '%_au_%' OR LOWER(hb.directbuttonname) like '%_au_%')
        ) > 0
        THEN 1
        ELSE 0
        END
      </Query>
    </SqlQueries>
    <OracleQueries>
      <Query isDesigner="true" prefix="" postfix="">
        ;WITH sub_config AS (
        SELECT configid, name, 1 AS relative_depth
        FROM PORTAL_CONFIG
        WHERE name = 'TE_ISI'

        UNION ALL

        SELECT config.configid, config.name, sc.relative_depth + 1
        FROM PORTAL_CONFIG config, sub_config sc
        WHERE config.parentid = sc.configid
        )
        SELECT CASE
        WHEN
        (
        SELECT COUNT(*)
        FROM sub_config AS sc
        INNER JOIN PORTAL_PAGEREF AS pr
        ON sc.configid = pr.configid and sc.name != 'TE_ISI'
        INNER JOIN PORTAL_MENUACTION AS ma
        ON pr.refid = ma.refid
        INNER JOIN PORTAL_MENUITEM AS mi
        ON ma.menuid = mi.menuid
        WHERE
        pr.pagename IN ('ExecuteReport', 'QueryReport')
        AND mi.visible = 1
        AND LOWER(mi.label) like '%_au_%'
        ) > 0 OR
        (
        SELECT COUNT(*)
        FROM sub_config AS sc
        INNER JOIN PORTAL_PAGEREF AS pr
        ON sc.configid = pr.configid and sc.name != 'TE_ISI'
        INNER JOIN PORTAL_DIRECTBUTTONS AS db
        ON db.refid = pr.refid
        INNER JOIN PORTAL_HEADER_BUTTONS AS hb
        ON hb.directbuttonname = db.name
        INNER JOIN PORTAL_HEADER AS h
        ON h.headerid = hb.headerid
        WHERE
        pr.pagename IN ('ExecuteReport', 'QueryReport')
        AND (LOWER(db.name) like '%_au_%' OR LOWER(hb.directbuttonname) like '%_au_%')
        ) > 0
        THEN 1
        ELSE 0
        END
      </Query>
    </OracleQueries>
  </Measurement>
  <Measurement exposedName="ACUS-128" name="Do you have reports set up regarding sales planning?" returnType="bool">
    <SqlQueries>
      <Query isDesigner="true" prefix="" postfix="">
        ;WITH sub_config AS (
        SELECT configid, name, 1 AS relative_depth
        FROM PORTAL_CONFIG
        WHERE name = 'TE_ISI'

        UNION ALL

        SELECT config.configid, config.name, sc.relative_depth + 1
        FROM PORTAL_CONFIG config, sub_config sc
        WHERE config.parentid = sc.configid
        )
        SELECT CASE
        WHEN
        (
        SELECT COUNT(*)
        FROM sub_config AS sc
        INNER JOIN PORTAL_PAGEREF AS pr
        ON sc.configid = pr.configid and sc.name != 'TE_ISI'
        INNER JOIN PORTAL_MENUACTION AS ma
        ON pr.refid = ma.refid
        INNER JOIN PORTAL_MENUITEM AS mi
        ON ma.menuid = mi.menuid
        WHERE
        pr.pagename IN ('ExecuteReport', 'QueryReport')
        AND mi.visible = 1
        AND LOWER(mi.label) like '%sales%'
        ) > 0 OR
        (
        SELECT COUNT(*)
        FROM sub_config AS sc
        INNER JOIN PORTAL_PAGEREF AS pr
        ON sc.configid = pr.configid and sc.name != 'TE_ISI'
        INNER JOIN PORTAL_DIRECTBUTTONS AS db
        ON db.refid = pr.refid
        INNER JOIN PORTAL_HEADER_BUTTONS AS hb
        ON hb.directbuttonname = db.name
        INNER JOIN PORTAL_HEADER AS h
        ON h.headerid = hb.headerid
        WHERE
        pr.pagename IN ('ExecuteReport', 'QueryReport')
        AND (LOWER(db.name) like '%sales%' OR LOWER(hb.directbuttonname) like '%sales%')
        ) > 0
        THEN 1
        ELSE 0
        END
      </Query>
    </SqlQueries>
    <OracleQueries>
      <Query isDesigner="true" prefix="" postfix="">
        ;WITH sub_config AS (
        SELECT configid, name, 1 AS relative_depth
        FROM PORTAL_CONFIG
        WHERE name = 'TE_ISI'

        UNION ALL

        SELECT config.configid, config.name, sc.relative_depth + 1
        FROM PORTAL_CONFIG config, sub_config sc
        WHERE config.parentid = sc.configid
        )
        SELECT CASE
        WHEN
        (
        SELECT COUNT(*)
        FROM sub_config AS sc
        INNER JOIN PORTAL_PAGEREF AS pr
        ON sc.configid = pr.configid and sc.name != 'TE_ISI'
        INNER JOIN PORTAL_MENUACTION AS ma
        ON pr.refid = ma.refid
        INNER JOIN PORTAL_MENUITEM AS mi
        ON ma.menuid = mi.menuid
        WHERE
        pr.pagename IN ('ExecuteReport', 'QueryReport')
        AND mi.visible = 1
        AND LOWER(mi.label) like '%sales%'
        ) > 0 OR
        (
        SELECT COUNT(*)
        FROM sub_config AS sc
        INNER JOIN PORTAL_PAGEREF AS pr
        ON sc.configid = pr.configid and sc.name != 'TE_ISI'
        INNER JOIN PORTAL_DIRECTBUTTONS AS db
        ON db.refid = pr.refid
        INNER JOIN PORTAL_HEADER_BUTTONS AS hb
        ON hb.directbuttonname = db.name
        INNER JOIN PORTAL_HEADER AS h
        ON h.headerid = hb.headerid
        WHERE
        pr.pagename IN ('ExecuteReport', 'QueryReport')
        AND (LOWER(db.name) like '%sales%' OR LOWER(hb.directbuttonname) like '%sales%')
        ) > 0
        THEN 1
        ELSE 0
        END
      </Query>
    </OracleQueries>
  </Measurement>
  <Measurement exposedName="ACUS-131" name="Do you have reports set up regarding Key Account Management?" returnType="bool">
    <SqlQueries>
      <Query isDesigner="true" prefix="" postfix="">
        SELECT 0
      </Query>
    </SqlQueries>
    <OracleQueries>
      <Query isDesigner="true" prefix="" postfix="">
        SELECT 0
      </Query>
    </OracleQueries>
  </Measurement>
  <Measurement exposedName="ACUS-134" name="Do you have reports set up on campaigns?" returnType="bool">
    <SqlQueries>
      <Query isDesigner="true" prefix="" postfix="">
        ;WITH sub_config AS (
        SELECT configid, name, 1 AS relative_depth
        FROM PORTAL_CONFIG
        WHERE name = 'TE_ISI'

        UNION ALL

        SELECT config.configid, config.name, sc.relative_depth + 1
        FROM PORTAL_CONFIG config, sub_config sc
        WHERE config.parentid = sc.configid
        )
        SELECT CASE
        WHEN
        (
        SELECT COUNT(*)
        FROM sub_config AS sc
        INNER JOIN PORTAL_PAGEREF AS pr
        ON sc.configid = pr.configid and sc.name != 'TE_ISI'
        INNER JOIN PORTAL_MENUACTION AS ma
        ON pr.refid = ma.refid
        INNER JOIN PORTAL_MENUITEM AS mi
        ON ma.menuid = mi.menuid
        WHERE
        pr.pagename IN ('ExecuteReport', 'QueryReport')
        AND mi.visible = 1
        AND LOWER(mi.label) like '%_cm_%'
        ) > 0 OR
        (
        SELECT COUNT(*)
        FROM sub_config AS sc
        INNER JOIN PORTAL_PAGEREF AS pr
        ON sc.configid = pr.configid and sc.name != 'TE_ISI'
        INNER JOIN PORTAL_DIRECTBUTTONS AS db
        ON db.refid = pr.refid
        INNER JOIN PORTAL_HEADER_BUTTONS AS hb
        ON hb.directbuttonname = db.name
        INNER JOIN PORTAL_HEADER AS h
        ON h.headerid = hb.headerid
        WHERE
        pr.pagename IN ('ExecuteReport', 'QueryReport')
        AND (LOWER(db.name) like '%_cm_%' OR LOWER(hb.directbuttonname) like '%_cm_%')
        ) > 0
        THEN 1
        ELSE 0
        END
      </Query>
    </SqlQueries>
    <OracleQueries>
      <Query isDesigner="true" prefix="" postfix="">
        ;WITH sub_config AS (
        SELECT configid, name, 1 AS relative_depth
        FROM PORTAL_CONFIG
        WHERE name = 'TE_ISI'

        UNION ALL

        SELECT config.configid, config.name, sc.relative_depth + 1
        FROM PORTAL_CONFIG config, sub_config sc
        WHERE config.parentid = sc.configid
        )
        SELECT CASE
        WHEN
        (
        SELECT COUNT(*)
        FROM sub_config AS sc
        INNER JOIN PORTAL_PAGEREF AS pr
        ON sc.configid = pr.configid and sc.name != 'TE_ISI'
        INNER JOIN PORTAL_MENUACTION AS ma
        ON pr.refid = ma.refid
        INNER JOIN PORTAL_MENUITEM AS mi
        ON ma.menuid = mi.menuid
        WHERE
        pr.pagename IN ('ExecuteReport', 'QueryReport')
        AND mi.visible = 1
        AND LOWER(mi.label) like '%_cm_%'
        ) > 0 OR
        (
        SELECT COUNT(*)
        FROM sub_config AS sc
        INNER JOIN PORTAL_PAGEREF AS pr
        ON sc.configid = pr.configid and sc.name != 'TE_ISI'
        INNER JOIN PORTAL_DIRECTBUTTONS AS db
        ON db.refid = pr.refid
        INNER JOIN PORTAL_HEADER_BUTTONS AS hb
        ON hb.directbuttonname = db.name
        INNER JOIN PORTAL_HEADER AS h
        ON h.headerid = hb.headerid
        WHERE
        pr.pagename IN ('ExecuteReport', 'QueryReport')
        AND (LOWER(db.name) like '%_cm_%' OR LOWER(hb.directbuttonname) like '%_cm_%')
        ) > 0
        THEN 1
        ELSE 0
        END
      </Query>
    </OracleQueries>
  </Measurement>
  <Measurement exposedName="ACUS-137" name="Do you have reports set up on leads?" returnType="bool">
    <SqlQueries>
      <Query isDesigner="true" prefix="" postfix="">
        ;WITH sub_config AS (
        SELECT configid, name, 1 AS relative_depth
        FROM PORTAL_CONFIG
        WHERE name = 'TE_ISI'

        UNION ALL

        SELECT config.configid, config.name, sc.relative_depth + 1
        FROM PORTAL_CONFIG config, sub_config sc
        WHERE config.parentid = sc.configid
        )
        SELECT CASE
        WHEN
        (
        SELECT COUNT(*)
        FROM sub_config AS sc
        INNER JOIN PORTAL_PAGEREF AS pr
        ON sc.configid = pr.configid and sc.name != 'TE_ISI'
        INNER JOIN PORTAL_MENUACTION AS ma
        ON pr.refid = ma.refid
        INNER JOIN PORTAL_MENUITEM AS mi
        ON ma.menuid = mi.menuid
        WHERE
        pr.pagename IN ('ExecuteReport', 'QueryReport')
        AND mi.visible = 1
        AND LOWER(mi.label) like '%_a034_%'
        ) > 0 OR
        (
        SELECT COUNT(*)
        FROM sub_config AS sc
        INNER JOIN PORTAL_PAGEREF AS pr
        ON sc.configid = pr.configid and sc.name != 'TE_ISI'
        INNER JOIN PORTAL_DIRECTBUTTONS AS db
        ON db.refid = pr.refid
        INNER JOIN PORTAL_HEADER_BUTTONS AS hb
        ON hb.directbuttonname = db.name
        INNER JOIN PORTAL_HEADER AS h
        ON h.headerid = hb.headerid
        WHERE
        pr.pagename IN ('ExecuteReport', 'QueryReport')
        AND (LOWER(db.name) like '%_a034_%' OR LOWER(hb.directbuttonname) like '%_a034_%')
        ) > 0
        THEN 1
        ELSE 0
        END
      </Query>
    </SqlQueries>
    <OracleQueries>
      <Query isDesigner="true" prefix="" postfix="">
        ;WITH sub_config AS (
        SELECT configid, name, 1 AS relative_depth
        FROM PORTAL_CONFIG
        WHERE name = 'TE_ISI'

        UNION ALL

        SELECT config.configid, config.name, sc.relative_depth + 1
        FROM PORTAL_CONFIG config, sub_config sc
        WHERE config.parentid = sc.configid
        )
        SELECT CASE
        WHEN
        (
        SELECT COUNT(*)
        FROM sub_config AS sc
        INNER JOIN PORTAL_PAGEREF AS pr
        ON sc.configid = pr.configid and sc.name != 'TE_ISI'
        INNER JOIN PORTAL_MENUACTION AS ma
        ON pr.refid = ma.refid
        INNER JOIN PORTAL_MENUITEM AS mi
        ON ma.menuid = mi.menuid
        WHERE
        pr.pagename IN ('ExecuteReport', 'QueryReport')
        AND mi.visible = 1
        AND LOWER(mi.label) like '%_a034_%'
        ) > 0 OR
        (
        SELECT COUNT(*)
        FROM sub_config AS sc
        INNER JOIN PORTAL_PAGEREF AS pr
        ON sc.configid = pr.configid and sc.name != 'TE_ISI'
        INNER JOIN PORTAL_DIRECTBUTTONS AS db
        ON db.refid = pr.refid
        INNER JOIN PORTAL_HEADER_BUTTONS AS hb
        ON hb.directbuttonname = db.name
        INNER JOIN PORTAL_HEADER AS h
        ON h.headerid = hb.headerid
        WHERE
        pr.pagename IN ('ExecuteReport', 'QueryReport')
        AND (LOWER(db.name) like '%_a034_%' OR LOWER(hb.directbuttonname) like '%_a034_%')
        ) > 0
        THEN 1
        ELSE 0
        END
      </Query>
    </OracleQueries>
  </Measurement>
  <Measurement exposedName="ACUS-138" name="Lead 2 Opportunity Conversion Rate" returnType="string">
    <SqlQueries>
      <Query isDesigner="false" prefix="" postfix="">
        WITH CTE_A034 AS (
        SELECT COUNT(*) As TotalLeads,
        SUM(CASE WHEN ISNULL(ID_Y1 , 0) != 0
        THEN 1
        ELSE 0
        END) AS LeadsWithoutOpp
        FROM {tablePrefix}A034
        )
        SELECT ISNULL(CEILING(LeadsWithoutOpp*100/TotalLeads), 0)
        FROM CTE_A034
      </Query>
    </SqlQueries>
    <OracleQueries>
      <Query isDesigner="false" prefix="" postfix="">
         WITH CTE_A034 AS (
        SELECT COUNT(*) As TotalLeads,
        SUM(CASE WHEN NVL(ID_Y1 , 0) != 0
        THEN 1
        ELSE 0
        END) AS LeadsWithoutOpp
        FROM {tablePrefix}A034
        )
        
        SELECT NVL(CEIL(LeadsWithoutOpp*100/TotalLeads), 0)
        FROM CTE_A034
      </Query>
    </OracleQueries>
  </Measurement>
  <Measurement exposedName="ACUS-139" name="Opportunity 2 Deal Conversion Rate" returnType="string">
    <SqlQueries>
      <Query isDesigner="false" prefix="" postfix="">
        WITH CTE_Y1 AS (
        SELECT COUNT(*) As TotalOpportunity,
        SUM(CASE WHEN [Status] = 2
        THEN 1
        ELSE 0
        END) AS WinOpportunity
        FROM {tablePrefix}Y1
        )
        SELECT ISNULL(CEILING(WinOpportunity*100/TotalOpportunity), 0)
        FROM CTE_Y1
      </Query>
    </SqlQueries>
    <OracleQueries>
      <Query isDesigner="false" prefix="" postfix="">
        WITH CTE_Y1 AS (
        SELECT COUNT(*) As TotalOpportunity,
        SUM(CASE WHEN Status = 2
        THEN 1
        ELSE 0
        END) AS WinOpportunity
        FROM {tablePrefix}Y1
        )
        
        SELECT NVL(CEIL(WinOpportunity*100/TotalOpportunity), 0)
        FROM CTE_Y1
      </Query>
    </OracleQueries>
  </Measurement>
  <Measurement exposedName="ACUS-140" name="Average Deal Size" returnType="string">
    <SqlQueries>
      <Query isDesigner="false" prefix="" postfix=" EUR">
        SELECT ISNULL(CEILING(AVG(SumProdWert * (CASE WHEN ISNULL(F4025, 0) = 0
        THEN 1.0
        ELSE F4025
        END)
        )
        ), 0)
        FROM {tablePrefix}Y1
      </Query>
    </SqlQueries>
    <OracleQueries>
      <Query isDesigner="false" prefix="" postfix="EUR">
        SELECT NVL(CEIL(AVG(SumProdWert * (CASE WHEN NVL(F4025, 0) = 0
        THEN 1.0
        ELSE F4025
        END)
        )
        ), 0)
        FROM {tablePrefix}Y1
      </Query>
    </OracleQueries>
  </Measurement>
  <Measurement exposedName="ACUS-141" name="Average Deal Time for Closure" returnType="string">
    <SqlQueries>
      <Query isDesigner="false" prefix="" postfix="">
        WITH CTE_Y1 AS (
        SELECT CAST(CAST(ABSCHLUSSDAT AS VARCHAR(10)) AS DATE) CompletedDate,
        CAST(SUBSTRING(CAST(NEU AS VARCHAR(20)), 1, 8) AS DATE) SartDate
        FROM {tablePrefix}Y1
        WHERE ISNULL(ABSCHLUSSDAT, 0) != 0
        )
        SELECT ISNULL(AVG(DATEDIFF(D, SartDate, CompletedDate)) , 0)
        FROM CTE_Y1
      </Query>
    </SqlQueries>
    <OracleQueries>
      <Query isDesigner="false" prefix="" postfix="">
        WITH CTE_Y1 AS (
        SELECT TO_DATE(CAST(ABSCHLUSSDAT AS CHAR(8)), 'YYYYMMDD') CompletedDate,
        TO_DATE(SUBSTR(CAST(NEU AS CHAR(20)), 1, 8), 'YYYYMMDD') SartDate
        FROM {tablePrefix}Y1
        WHERE NVL(ABSCHLUSSDAT, 0) != 0
        )
        
        SELECT NVL(AVG(CompletedDate - SartDate), 0)
        FROM CTE_Y1
      </Query>
    </OracleQueries>
  </Measurement>
  <Measurement exposedName="ACUS-142" name="Average Ticket Time to Closure" returnType="string">
    <SqlQueries>
      <Query isDesigner="false" prefix="" postfix="">
        WITH CTE_KM AS (
        SELECT CONVERT(Datetime, LEFT(CAST(ErstellungsDatum_DT AS VARCHAR(20)), 8)) SartDate,
        CONVERT(Datetime, LEFT(CAST(ErledigtDatum_DT AS VARCHAR(20)), 8)) CompletedDate
        FROM {tablePrefix}KM
        WHERE ISNULL(ErledigtDatum_DT, 0) != 0 AND ISNULL(ErstellungsDatum_DT, 0) != 0
        AND LEN(CAST(ErstellungsDatum_DT AS VARCHAR(20))) = 17 AND LEN(CAST(ErledigtDatum_DT AS VARCHAR(20))) = 17
        )
        SELECT ISNULL(AVG(DATEDIFF(D, SartDate, CompletedDate)) , 0)
        FROM CTE_KM
      </Query>
    </SqlQueries>
    <OracleQueries>
      <Query isDesigner="false" prefix="" postfix="">
        WITH CTE_KM AS (
        SELECT TO_DATE(SUBSTR(CAST(ErstellungsDatum_DT AS CHAR(20)), 1, 8), 'YYYYMMDD') SartDate,
        TO_DATE(SUBSTR(CAST(ErledigtDatum_DT AS CHAR(20)), 1, 8), 'YYYYMMDD') CompletedDate        
        FROM {tablePrefix}KM
        WHERE NVL(ErledigtDatum_DT, 0) != 0 AND NVL(ErstellungsDatum_DT, 0) != 0
        AND LENGTH(RTRIM(CAST(ErstellungsDatum_DT AS CHAR(20)))) = 17 AND LENGTH(RTRIM(CAST(ErledigtDatum_DT AS CHAR(20)))) = 17
        )
        
        SELECT NVL(AVG(CompletedDate - SartDate), 0)
        FROM CTE_KM
      </Query>
    </OracleQueries>
  </Measurement>
  <Measurement exposedName="ACUS-143" name="Service Level Compliance" returnType="string">
    <SqlQueries>
      <Query isDesigner="false" prefix="" postfix="">
        WITH CTE_KM AS (
        SELECT CONVERT(Datetime, LEFT(CAST(FaelligDatum_DT AS VARCHAR(20)), 8)) DueDate,
        CONVERT(Datetime, LEFT(CAST(ErledigtDatum_DT AS VARCHAR(20)), 8)) CompletedDate
        FROM {tablePrefix}KM
        WHERE ISNULL(ErledigtDatum_DT, 0) != 0 AND ISNULL(FaelligDatum_DT, 0) != 0
        AND LEN(CAST(FaelligDatum_DT AS VARCHAR(20))) = 17 AND LEN(CAST(ErledigtDatum_DT AS VARCHAR(20))) = 17
        )
        SELECT CASE WHEN COUNT(*) = 0
        THEN 0
        ELSE
        CEILING(ISNULL(SUM(CASE WHEN CompletedDate &lt;= DueDate
        THEN 1
        ELSE 0
        END), 0) *100.0/ COUNT(*))
        END
        FROM CTE_KM
      </Query>
    </SqlQueries>
    <OracleQueries>
      <Query isDesigner="false" prefix="" postfix="">
        WITH CTE_KM AS (
        SELECT TO_DATE(SUBSTR(CAST(FaelligDatum_DT AS CHAR(20)), 1, 8), 'YYYYMMDD') DueDate,
        TO_DATE(SUBSTR(CAST(ErledigtDatum_DT AS CHAR(20)), 1, 8), 'YYYYMMDD') CompletedDate        
        FROM {tablePrefix}KM
        WHERE NVL(ErledigtDatum_DT, 0) != 0 AND NVL(FaelligDatum_DT, 0) != 0
        AND LENGTH(RTRIM(CAST(FaelligDatum_DT AS CHAR(20)))) = 17 AND LENGTH(RTRIM(CAST(ErledigtDatum_DT AS CHAR(20)))) = 17
        )
        
       SELECT CASE WHEN COUNT(*) = 0
        THEN 0
        ELSE
        CEIL(NVL(SUM(CASE WHEN CompletedDate &lt;= DueDate
        THEN 1
        ELSE 0
        END), 0) *100.0/ COUNT(*))
        END
        FROM CTE_KM
      </Query>
    </OracleQueries>
  </Measurement>
  <Measurement exposedName="ACUS-144" name="Average Campaign Reach" returnType="string">
    <SqlQueries>
      <Query isDesigner="false" prefix="" postfix="">
        WITH CTE_AG AS
        (
        SELECT ag.ID
        FROM {tablePrefix}AG ag
        INNER JOIN {tablePrefix}AK ak
        ON ag.ID_AK = ak.ID
        WHERE ak.AktEnde != 0
        AND CONVERT(Datetime, LEFT(CAST(ak.AktEnde AS VARCHAR(20)), 8)) &lt; GETDATE()
        )
        , CTE_BR AS
        (
        SELECT br.ID
        FROM {tablePrefix}BR br
        INNER JOIN {tablePrefix}AK ak
        ON br.ID_AK = ak.ID
        WHERE br.Ergebnis in (1,2,7)
        AND ak.AktEnde != 0
        AND CONVERT(Datetime, LEFT(CAST(ak.AktEnde AS VARCHAR(20)), 8)) &lt; GETDATE()
        )
        SELECT CASE WHEN (SELECT COUNT(*) FROM CTE_AG) = 0
        THEN 0
        ELSE CEILING(((SELECT COUNT(*) FROM CTE_BR)*100.0)/(SELECT COUNT(*) FROM CTE_AG))
        END
      </Query>
    </SqlQueries>
    <OracleQueries>
      <Query isDesigner="false" prefix="" postfix="">               
      WITH CTE_AG AS
        (
        SELECT ag.ID
        FROM {tablePrefix}AG ag
        INNER JOIN {tablePrefix}AK ak
        ON ag.ID_AK = ak.ID
        WHERE ak.AktEnde != 0
        AND TO_DATE(SUBSTR(CAST(ak.AktEnde AS CHAR(20)), 1, 8), 'YYYYMMDD') &lt; SYSTIMESTAMP
        )
        , CTE_BR AS
        (
        SELECT br.ID
        FROM {tablePrefix}BR br
        INNER JOIN {tablePrefix}AK ak
        ON br.ID_AK = ak.ID
        WHERE br.Ergebnis in (1,2,7)
        AND ak.AktEnde != 0
        AND TO_DATE(SUBSTR(CAST(ak.AktEnde AS CHAR(20)), 1, 8), 'YYYYMMDD') &lt; SYSTIMESTAMP
        )
        
        SELECT CASE WHEN (SELECT COUNT(*) FROM CTE_AG) = 0
        THEN 0
        ELSE CEIL(((SELECT COUNT(*) FROM CTE_BR)*100.0)/(SELECT COUNT(*) FROM CTE_AG))
        END FROM DUAL
      </Query>
    </OracleQueries>
  </Measurement>
  <Measurement exposedName="ACUS-145" name="Customer Satisfaction (NPS)" returnType="string">
    <SqlQueries>
      <Query isDesigner="false" prefix="" postfix="">
        SELECT 0
      </Query>
    </SqlQueries>
    <OracleQueries>
      <Query isDesigner="false" prefix="" postfix="">SELECT 0 FROM dual</Query>
    </OracleQueries>
  </Measurement>
  <Measurement exposedName="ACUS-146" name="Lead Generation Effectiveness" returnType="string">
    <SqlQueries>
      <Query isDesigner="false" prefix="" postfix="">
        WITH CTE_AG AS
        (
        SELECT ag.ID
        FROM {tablePrefix}AG ag
        INNER JOIN {tablePrefix}AK ak
        ON ag.ID_AK = ak.ID
        WHERE ak.AktEnde != 0
        AND CONVERT(Datetime, LEFT(CAST(ak.AktEnde AS VARCHAR(20)), 8)) &lt; GETDATE()
        )
        , CTE_BR AS
        (
        SELECT br.ID
        FROM {tablePrefix}BR br
        INNER JOIN {tablePrefix}AK ak
        ON br.ID_AK = ak.ID
        WHERE br.Aktivitat IN (19, 17, 15)
        AND (br.AktR1 = 1 OR br.AktR2 = 1 OR br.AktR3 = 1 OR br.AktR4 = 1 OR br.AktR5 = 1)
        AND ak.AktEnde != 0
        AND CONVERT(Datetime, LEFT(CAST(ak.AktEnde AS VARCHAR(20)), 8)) &lt; GETDATE()
        )
        SELECT CASE WHEN (SELECT COUNT(*) FROM CTE_AG) = 0
        THEN 0
        ELSE CEILING(((SELECT COUNT(*) FROM CTE_BR)*100.0)/(SELECT COUNT(*) FROM CTE_AG))
        END
      </Query>
    </SqlQueries>
    <OracleQueries>
      <Query isDesigner="false" prefix="" postfix="">
                
WITH CTE_AG AS
        (
        SELECT ag.ID
        FROM {tablePrefix}AG ag
        INNER JOIN {tablePrefix}AK ak
        ON ag.ID_AK = ak.ID
        WHERE ak.AktEnde != 0
        AND TO_DATE(SUBSTR(CAST(ak.AktEnde AS CHAR(20)), 1, 8), 'YYYYMMDD') &lt; SYSTIMESTAMP
        )
        , CTE_BR AS
        (
        SELECT br.ID
        FROM {tablePrefix}BR br
        INNER JOIN {tablePrefix}AK ak
        ON br.ID_AK = ak.ID
        WHERE br.Aktivitat IN (19, 17, 15)
        AND (br.AktR1 = 1 OR br.AktR2 = 1 OR br.AktR3 = 1 OR br.AktR4 = 1 OR br.AktR5 = 1)
        AND ak.AktEnde != 0
        AND  TO_DATE(SUBSTR(CAST(ak.AktEnde AS CHAR(20)), 1, 8), 'YYYYMMDD') &lt; SYSTIMESTAMP
        )
        SELECT CASE WHEN (SELECT COUNT(*) FROM CTE_AG) = 0
        THEN 0
        ELSE CEIL(((SELECT COUNT(*) FROM CTE_BR)*100.0)/(SELECT COUNT(*) FROM CTE_AG))
        END FROM DUAL
      </Query>
    </OracleQueries>
  </Measurement>
  <Measurement exposedName="Count Company Time Management" name="Count of Companies with Opening Hours Configured" returnType="int">
    <SqlQueries>
      <Query isDesigner="false" prefix="" postfix="">
        select count(distinct ID_FI) from {tablePrefix}CT
        where Vorm_von != 0 and Typ = 0
      </Query>
    </SqlQueries>
    <OracleQueries>
      <Query isDesigner="false" prefix="" postfix="">SELECT 0 FROM dual</Query>
    </OracleQueries>
  </Measurement>
  <Measurement exposedName="Count Sales Planning" name="Count Sales Planning" returnType="int">
    <SqlQueries>
      <Query isDesigner="false" prefix="" postfix="">
        SELECT COUNT(ID) FROM {tablePrefix}FC
      </Query>
    </SqlQueries>
    <OracleQueries>
      <Query isDesigner="false" prefix="" postfix="">SELECT 0 FROM dual</Query>
    </OracleQueries>
  </Measurement>
  <Measurement exposedName="ACUS-64-4" name="For which info areas is serial entry configured?" returnType="string">
    <SqlQueries>
      <Query isDesigner="true" prefix="" postfix="">
        ;WITH sub_config AS (
          SELECT configid, name, 1 AS relative_depth
          FROM PORTAL_CONFIG
          WHERE name = 'TE_ISI'

          UNION ALL

          SELECT config.configid, config.name, sc.relative_depth + 1
          FROM PORTAL_CONFIG config, sub_config sc
          WHERE config.parentid = sc.configid
        ),
        configured_tables AS (
          SELECT
            distinct concat(pt.tablename, ' (', pt.og, ')') as InfoAreas,
            1 as GroupBy
          FROM sub_config sc
          INNER JOIN PORTAL_HEADER ph
          ON sc.configid = ph.configid and sc.name != 'TE_ISI'
          INNER JOIN PORTAL_HEADERGROUP phg
          ON phg.headergroupid = ph.headergroupid
          INNER JOIN PORTAL_TABLE pt
          ON pt.tableid = phg.tableid
          INNER JOIN PORTAL_HEADER_BUTTONS phb
          ON ph.headerid = phb.headerid
          INNER JOIN PORTAL_DIRECTBUTTONS pdb
          ON phb.directbuttonname = pdb.name
          INNER JOIN PORTAL_PAGE_CALLPARAMETERS ppcp
          ON pdb.refid = ppcp.Refid
          where ppcp.ParameterName = 'Command' AND ArgValue LIKE '%SerialEntry%'
        )
        select string_agg(InfoAreas, ', ') as SerialEntryConfiguredFor from configured_tables
        group by GroupBy
      </Query>
    </SqlQueries>
    <OracleQueries>
      <Query isDesigner="true" prefix="" postfix="">
        ;WITH sub_config AS (
          SELECT configid, name, 1 AS relative_depth
          FROM PORTAL_CONFIG
          WHERE name = 'TE_ISI'

          UNION ALL

          SELECT config.configid, config.name, sc.relative_depth + 1
          FROM PORTAL_CONFIG config, sub_config sc
          WHERE config.parentid = sc.configid
        ),
        configured_tables AS (
          SELECT
            distinct concat(pt.tablename, ' (', pt.og, ')') as InfoAreas,
            1 as GroupBy
          FROM sub_config sc
          INNER JOIN PORTAL_HEADER ph
          ON sc.configid = ph.configid and sc.name != 'TE_ISI'
          INNER JOIN PORTAL_HEADERGROUP phg
          ON phg.headergroupid = ph.headergroupid
          INNER JOIN PORTAL_TABLE pt
          ON pt.tableid = phg.tableid
          INNER JOIN PORTAL_HEADER_BUTTONS phb
          ON ph.headerid = phb.headerid
          INNER JOIN PORTAL_DIRECTBUTTONS pdb
          ON phb.directbuttonname = pdb.name
          INNER JOIN PORTAL_PAGE_CALLPARAMETERS ppcp
          ON pdb.refid = ppcp.Refid
          where ppcp.ParameterName = 'Command' AND ArgValue LIKE '%SerialEntry%'
        )
        select string_agg(InfoAreas, ', ') as SerialEntryConfiguredFor from configured_tables
        group by GroupBy
      </Query>
    </OracleQueries>
  </Measurement>
  <Measurement exposedName="Count Company" name="Count Company" returnType="string">
    <SqlQueries>
      <Query isDesigner="false" prefix="" postfix="">
        SELECT COUNT(*) FROM {tablePrefix}FI
      </Query>
    </SqlQueries>
    <OracleQueries>
      <Query isDesigner="false" prefix="" postfix="">SELECT COUNT(*) FROM {tablePrefix}FI</Query>
    </OracleQueries>
  </Measurement>
  <Measurement exposedName="Count Competitor" name="Count Competitor" returnType="string">
    <SqlQueries>
      <Query isDesigner="false" prefix="" postfix="">
        SELECT COUNT(*) FROM {tablePrefix}FI
        WHERE Fityp = 3 OR Fityp2 = 3
      </Query>
    </SqlQueries>
    <OracleQueries>
      <Query isDesigner="false" prefix="" postfix="">
        SELECT COUNT(*) FROM {tablePrefix}FI
        WHERE Fityp = 3 OR Fityp2 = 3
      </Query>
    </OracleQueries>
  </Measurement>
  <Measurement exposedName="Count Person" name="Count Person" returnType="string">
    <SqlQueries>
      <Query isDesigner="false" prefix="" postfix="">
        SELECT COUNT(*) FROM {tablePrefix}CP
      </Query>
    </SqlQueries>
    <OracleQueries>
      <Query isDesigner="false" prefix="" postfix="">
         SELECT COUNT(*) FROM {tablePrefix}CP
      </Query>
    </OracleQueries>
  </Measurement>
  <Measurement exposedName="Count Relationship" name="Count Relationship" returnType="string">
    <SqlQueries>
      <Query isDesigner="false" prefix="" postfix="">
        SELECT COUNT(*) FROM {tablePrefix}PB
      </Query>
    </SqlQueries>
    <OracleQueries>
      <Query isDesigner="false" prefix="" postfix="">
        SELECT COUNT(*) FROM {tablePrefix}PB
      </Query>
    </OracleQueries>
  </Measurement>
  <Measurement exposedName="Count Activity" name="Count Activity" returnType="string">
    <SqlQueries>
      <Query isDesigner="false" prefix="" postfix="">
        SELECT COUNT(*) FROM {tablePrefix}MA
      </Query>
    </SqlQueries>
    <OracleQueries>
      <Query isDesigner="false" prefix="" postfix="">
        SELECT COUNT(*) FROM {tablePrefix}MA
      </Query>
    </OracleQueries>
  </Measurement>
  <Measurement exposedName="Count Task" name="Count Task" returnType="string">
    <SqlQueries>
      <Query isDesigner="false" prefix="" postfix="">
        SELECT COUNT(*) FROM {tablePrefix}A1
      </Query>
    </SqlQueries>
    <OracleQueries>
      <Query isDesigner="false" prefix="" postfix="">
        SELECT COUNT(*) FROM {tablePrefix}A1
      </Query>
    </OracleQueries>
  </Measurement>
  <Measurement exposedName="Count Opportunity" name="Count Opportunity" returnType="string">
    <SqlQueries>
      <Query isDesigner="false" prefix="" postfix="">
        SELECT COUNT(*) FROM {tablePrefix}Y1
      </Query>
    </SqlQueries>
    <OracleQueries>
      <Query isDesigner="false" prefix="" postfix="">
        SELECT COUNT(*) FROM {tablePrefix}Y1
      </Query>
    </OracleQueries>
  </Measurement>
  <Measurement exposedName="Count Inventory" name="Count Inventory" returnType="string">
    <SqlQueries>
      <Query isDesigner="false" prefix="" postfix="">
        SELECT COUNT(*) FROM {tablePrefix}B6
      </Query>
    </SqlQueries>
    <OracleQueries>
      <Query isDesigner="false" prefix="" postfix="">
        SELECT COUNT(*) FROM {tablePrefix}B6
      </Query>
    </OracleQueries>
  </Measurement>
  <Measurement exposedName="Count Inventory Control" name="Count Inventory Control" returnType="string">
    <SqlQueries>
      <Query isDesigner="false" prefix="" postfix="">
        SELECT COUNT(*) FROM {tablePrefix}B7
      </Query>
    </SqlQueries>
    <OracleQueries>
      <Query isDesigner="false" prefix="" postfix="">
        SELECT COUNT(*) FROM {tablePrefix}B7
      </Query>
    </OracleQueries>
  </Measurement>
  <Measurement exposedName="Count Sample" name="Count Sample" returnType="string">
    <SqlQueries>
      <Query isDesigner="false" prefix="" postfix="">
        SELECT COUNT(*) FROM {tablePrefix}AU
        WHERE AufWert = 0
      </Query>
    </SqlQueries>
    <OracleQueries>
      <Query isDesigner="false" prefix="" postfix="">
         SELECT COUNT(*) FROM {tablePrefix}AU
        WHERE AufWert = 0
      </Query>
    </OracleQueries>
  </Measurement>
  <Measurement exposedName="Count Bid" name="Count Bid" returnType="string">
    <SqlQueries>
      <Query isDesigner="false" prefix="" postfix="">
        SELECT 0
      </Query>
    </SqlQueries>
    <OracleQueries>
      <Query isDesigner="false" prefix="" postfix="">
        SELECT 0 FROM dual
      </Query>
    </OracleQueries>
  </Measurement>
  <Measurement exposedName="Count Property" name="Count Property" returnType="string">
    <SqlQueries>
      <Query isDesigner="false" prefix="" postfix="">
        SELECT COUNT(*) FROM {tablePrefix}OJ
      </Query>
    </SqlQueries>
    <OracleQueries>
      <Query isDesigner="false" prefix="" postfix="">
        SELECT COUNT(*) FROM {tablePrefix}OJ
      </Query>
    </OracleQueries>
  </Measurement>
  <Measurement exposedName="Count Offer" name="Count Offer" returnType="string">
    <SqlQueries>
      <Query isDesigner="false" prefix="" postfix="">
        SELECT COUNT(*) FROM {tablePrefix}PR
      </Query>
    </SqlQueries>
    <OracleQueries>
      <Query isDesigner="false" prefix="" postfix="">
        SELECT COUNT(*) FROM {tablePrefix}PR
      </Query>
    </OracleQueries>
  </Measurement>
  <Measurement exposedName="Count Service Offer" name="Count Service Offer" returnType="string">
    <SqlQueries>
      <Query isDesigner="false" prefix="" postfix="">
        SELECT COUNT(*) FROM {tablePrefix}PR
        WHERE F5029 = 1
      </Query>
    </SqlQueries>
    <OracleQueries>
      <Query isDesigner="false" prefix="" postfix="">
        SELECT COUNT(*) FROM {tablePrefix}PR
        WHERE F5029 = 1
      </Query>
    </OracleQueries>
  </Measurement>
  <Measurement exposedName="Count Service Contract Offer" name="Count Service Contract Offer" returnType="string">
    <SqlQueries>
      <Query isDesigner="false" prefix="" postfix="">
        SELECT COUNT(*) FROM {tablePrefix}PR
        WHERE F5029 = 3
      </Query>
    </SqlQueries>
    <OracleQueries>
      <Query isDesigner="false" prefix="" postfix="">
        SELECT COUNT(*) FROM {tablePrefix}PR
        WHERE F5029 = 3
      </Query>
    </OracleQueries>
  </Measurement>
  <Measurement exposedName="Count Service Report" name="Count Service Report" returnType="string">
    <SqlQueries>
      <Query isDesigner="false" prefix="" postfix="">
        SELECT COUNT(*) FROM {tablePrefix}PR
        WHERE F5029 = 2
      </Query>
    </SqlQueries>
    <OracleQueries>
      <Query isDesigner="false" prefix="" postfix="">
        SELECT COUNT(*) FROM {tablePrefix}PR
        WHERE F5029 = 2
      </Query>
    </OracleQueries>
  </Measurement>
  <Measurement exposedName="Count Order" name="Count Order" returnType="string">
    <SqlQueries>
      <Query isDesigner="false" prefix="" postfix="">
        SELECT COUNT(*) FROM {tablePrefix}AU
      </Query>
    </SqlQueries>
    <OracleQueries>
      <Query isDesigner="false" prefix="" postfix="">
        SELECT COUNT(*) FROM {tablePrefix}AU
      </Query>
    </OracleQueries>
  </Measurement>
  <Measurement exposedName="Count Ticket" name="Count Ticket" returnType="string">
    <SqlQueries>
      <Query isDesigner="false" prefix="" postfix="">
        SELECT COUNT(*) FROM {tablePrefix}KM
      </Query>
    </SqlQueries>
    <OracleQueries>
      <Query isDesigner="false" prefix="" postfix="">
        SELECT COUNT(*) FROM {tablePrefix}KM
      </Query>
    </OracleQueries>
  </Measurement>
  <Measurement exposedName="Count Installed Base" name="Count Installed Base" returnType="string">
    <SqlQueries>
      <Query isDesigner="false" prefix="" postfix="">
        SELECT COUNT(*) FROM {tablePrefix}IB
      </Query>
    </SqlQueries>
    <OracleQueries>
      <Query isDesigner="false" prefix="" postfix="">
        SELECT COUNT(*) FROM {tablePrefix}IB
      </Query>
    </OracleQueries>
  </Measurement>
  <Measurement exposedName="Count Campaign" name="Count Campaign" returnType="string">
    <SqlQueries>
      <Query isDesigner="false" prefix="" postfix="">
        SELECT COUNT(*) FROM {tablePrefix}CM
      </Query>
    </SqlQueries>
    <OracleQueries>
      <Query isDesigner="false" prefix="" postfix="">
        SELECT COUNT(*) FROM {tablePrefix}CM
      </Query>
    </OracleQueries>
  </Measurement>
  <Measurement exposedName="Count Marketing Activity" name="Count Marketing Activity" returnType="string">
    <SqlQueries>
      <Query isDesigner="false" prefix="" postfix="">
        SELECT COUNT(*) FROM {tablePrefix}AK
      </Query>
    </SqlQueries>
    <OracleQueries>
      <Query isDesigner="false" prefix="" postfix="">
        SELECT COUNT(*) FROM {tablePrefix}AK
      </Query>
    </OracleQueries>
  </Measurement>
  <Measurement exposedName="Count eMail Marketing Activity" name="Count eMail Marketing Activity" returnType="string">
    <SqlQueries>
      <Query isDesigner="false" prefix="" postfix="">
        SELECT COUNT(*) FROM {tablePrefix}AK
        WHERE AktVariante = 2
      </Query>
    </SqlQueries>
    <OracleQueries>
      <Query isDesigner="false" prefix="" postfix="">
        SELECT COUNT(*) FROM {tablePrefix}AK
        WHERE AktVariante = 2
      </Query>
    </OracleQueries>
  </Measurement>
  <Measurement exposedName="Count Lead" name="Count Lead" returnType="string">
    <SqlQueries>
      <Query isDesigner="false" prefix="" postfix="">
        SELECT COUNT(*) FROM {tablePrefix}A034
      </Query>
    </SqlQueries>
    <OracleQueries>
      <Query isDesigner="false" prefix="" postfix="">
        SELECT COUNT(*) FROM {tablePrefix}A034
      </Query>
    </OracleQueries>
  </Measurement>
  <Measurement exposedName="Count Event" name="Count Event" returnType="string">
    <SqlQueries>
      <Query isDesigner="false" prefix="" postfix="">
        SELECT COUNT(*) FROM {tablePrefix}AK
        WHERE Aktivitat = 14
      </Query>
    </SqlQueries>
    <OracleQueries>
      <Query isDesigner="false" prefix="" postfix="">
        SELECT COUNT(*) FROM {tablePrefix}AK
        WHERE Aktivitat = 14
      </Query>
    </OracleQueries>
  </Measurement>
  <Measurement exposedName="Count Newsletter Campaign" name="Count Newsletter Campaign" returnType="string">
    <SqlQueries>
      <Query isDesigner="false" prefix="" postfix="">
        SELECT COUNT(*) FROM {tablePrefix}CM
        WHERE KampTyp = 3
      </Query>
    </SqlQueries>
    <OracleQueries>
      <Query isDesigner="false" prefix="" postfix="">
        SELECT COUNT(*) FROM {tablePrefix}CM
        WHERE KampTyp = 3
      </Query>
    </OracleQueries>
  </Measurement>
  <Measurement exposedName="Count Document" name="Count Document" returnType="string">
    <SqlQueries>
      <Query isDesigner="false" prefix="" postfix="">
        SELECT COUNT(*) FROM {tablePrefix}D1
      </Query>
    </SqlQueries>
    <OracleQueries>
      <Query isDesigner="false" prefix="" postfix="">
        SELECT COUNT(*) FROM {tablePrefix}D1
      </Query>
    </OracleQueries>
  </Measurement>
  <Measurement exposedName="Count Document Link" name="Count Document Link" returnType="string">
    <SqlQueries>
      <Query isDesigner="false" prefix="" postfix="">
        SELECT COUNT(*) FROM {tablePrefix}D3
      </Query>
    </SqlQueries>
    <OracleQueries>
      <Query isDesigner="false" prefix="" postfix="">
        SELECT COUNT(*) FROM {tablePrefix}D3
      </Query>
    </OracleQueries>
  </Measurement>
  <Measurement exposedName="Count Item Master" name="Count Item Master" returnType="string">
    <SqlQueries>
      <Query isDesigner="false" prefix="" postfix="">
        SELECT COUNT(*) FROM {tablePrefix}AR
      </Query>
    </SqlQueries>
    <OracleQueries>
      <Query isDesigner="false" prefix="" postfix="">
        SELECT COUNT(*) FROM {tablePrefix}AR
      </Query>
    </OracleQueries>
  </Measurement>
  <Measurement exposedName="Count Territory Management" name="Count Territory Management" returnType="string">
    <SqlQueries>
      <Query isDesigner="false" prefix="" postfix="">
        SELECT COUNT(*) FROM {tablePrefix}SD
      </Query>
    </SqlQueries>
    <OracleQueries>
      <Query isDesigner="false" prefix="" postfix="">
        SELECT COUNT(*) FROM {tablePrefix}SD
      </Query>
    </OracleQueries>
  </Measurement>
  <Measurement exposedName="Count Expense" name="Count Expense" returnType="string">
    <SqlQueries>
      <Query isDesigner="false" prefix="" postfix="">
        SELECT COUNT(*) FROM {tablePrefix}B2
      </Query>
    </SqlQueries>
    <OracleQueries>
      <Query isDesigner="false" prefix="" postfix="">
        SELECT COUNT(*) FROM {tablePrefix}B2
      </Query>
    </OracleQueries>
  </Measurement>
  <Measurement exposedName="Count Key Account" name="Count Key Account" returnType="string">
    <SqlQueries>
      <Query isDesigner="false" prefix="" postfix="">
        SELECT COUNT(*) FROM {tablePrefix}FI
        WHERE F5033 = '1'
      </Query>
    </SqlQueries>
    <OracleQueries>
      <Query isDesigner="false" prefix="" postfix="">
        SELECT COUNT(*) FROM {tablePrefix}FI
        WHERE F5033 = '1'
      </Query>
    </OracleQueries>
  </Measurement>
  <Measurement exposedName="Count Survey" name="Count Survey" returnType="string">
    <SqlQueries>
      <Query isDesigner="false" prefix="" postfix="">
        SELECT COUNT(*) FROM {tablePrefix}U1
      </Query>
    </SqlQueries>
    <OracleQueries>
      <Query isDesigner="false" prefix="" postfix="">
        SELECT COUNT(*) FROM {tablePrefix}U1
      </Query>
    </OracleQueries>
  </Measurement>
  <Measurement exposedName="Count Invoice" name="Count Invoice" returnType="string">
    <SqlQueries>
      <Query isDesigner="false" prefix="" postfix="">
        SELECT COUNT(*) FROM {tablePrefix}X1
      </Query>
    </SqlQueries>
    <OracleQueries>
      <Query isDesigner="false" prefix="" postfix="">
        SELECT COUNT(*) FROM {tablePrefix}X1
      </Query>
    </OracleQueries>
  </Measurement>
  <Measurement exposedName="Count Rep" name="Count Rep" returnType="string">
    <SqlQueries>
      <Query isDesigner="false" prefix="" postfix="">
        SELECT COUNT(*) FROM {tablePrefix}ID
      </Query>
    </SqlQueries>
    <OracleQueries>
      <Query isDesigner="false" prefix="" postfix="">
        SELECT COUNT(*) FROM {tablePrefix}ID
      </Query>
    </OracleQueries>
  </Measurement>
  <Measurement exposedName="Count Login" name="Count Login" returnType="string">
    <SqlQueries>
      <Query isDesigner="false" prefix="" postfix="">
        SELECT COUNT(*) FROM {tablePrefix}US
      </Query>
    </SqlQueries>
    <OracleQueries>
      <Query isDesigner="false" prefix="" postfix="">
        SELECT COUNT(*) FROM {tablePrefix}US
      </Query>
    </OracleQueries>
  </Measurement>
  <Measurement exposedName="Count Price List" name="Count Price List" returnType="string">
    <SqlQueries>
      <Query isDesigner="false" prefix="" postfix="">
        SELECT COUNT(*) FROM {tablePrefix}PL
      </Query>
    </SqlQueries>
    <OracleQueries>
      <Query isDesigner="false" prefix="" postfix="">
        SELECT COUNT(*) FROM {tablePrefix}PL
      </Query>
    </OracleQueries>
  </Measurement>
  <Measurement exposedName="Count Sales Area" name="Count Sales Area" returnType="string">
    <SqlQueries>
      <Query isDesigner="false" prefix="" postfix="">
        SELECT COUNT(*) FROM {tablePrefix}VB
      </Query>
    </SqlQueries>
    <OracleQueries>
      <Query isDesigner="false" prefix="" postfix="">
        SELECT COUNT(*) FROM {tablePrefix}VB
      </Query>
    </OracleQueries>
  </Measurement>
  <Measurement exposedName="Count Sales Group" name="Count Sales Group" returnType="string">
    <SqlQueries>
      <Query isDesigner="false" prefix="" postfix="">
        SELECT COUNT(*) FROM {tablePrefix}SB
      </Query>
    </SqlQueries>
    <OracleQueries>
      <Query isDesigner="false" prefix="" postfix="">
        SELECT COUNT(*) FROM {tablePrefix}SB
      </Query>
    </OracleQueries>
  </Measurement>
  <Measurement exposedName="Count Station" name="Count Station" returnType="string">
    <SqlQueries>
      <Query isDesigner="false" prefix="" postfix="">
        SELECT COUNT(*) FROM {tablePrefix}STA
      </Query>
    </SqlQueries>
    <OracleQueries>
      <Query isDesigner="false" prefix="" postfix="">
        SELECT COUNT(*) FROM {tablePrefix}STA
      </Query>
    </OracleQueries>
  </Measurement>
  <Measurement exposedName="Number of active users" name="Number of active users" returnType="int">
    <SqlQueries>
      <Query isDesigner="false" prefix="" postfix="">
        SELECT COUNT(*) FROM {tablePrefix}ID id
        INNER JOIN {tablePrefix}US us
        ON id.ID = us.Nr
        WHERE id.Inaktiv != 1
      </Query>
    </SqlQueries>
    <OracleQueries>
      <Query isDesigner="false" prefix="" postfix="">
        SELECT COUNT(*) FROM {tablePrefix}ID id
        INNER JOIN {tablePrefix}US us
        ON id.ID = us.Nr
        WHERE id.Inaktiv != HEXTORAW(1)
      </Query>
    </OracleQueries>
  </Measurement>
  <Measurement exposedName="CRM Version" name="CRM Version" returnType="string">
    <SqlQueries>
      <Query isDesigner="true" prefix="" postfix="">
        SELECT version FROM PORTAL_CONFIGVERSION
        WHERE ConfigName = 'UPDATE_DEFAULT'
      </Query>
    </SqlQueries>
    <OracleQueries>
      <Query isDesigner="true" prefix="" postfix="">
        SELECT version FROM PORTAL_CONFIGVERSION
        WHERE ConfigName = 'UPDATE_DEFAULT'
      </Query>
    </OracleQueries>
  </Measurement>
  <Measurement exposedName="CRM Template Version" name="CRM Template Version" returnType="string">
    <SqlQueries>
      <Query isDesigner="true" prefix="" postfix="">
        SELECT textvalue FROM PORTAL_WEBCONFIG_VALUE
        WHERE name = 'Template.Version'
      </Query>
    </SqlQueries>
    <OracleQueries>
      <Query isDesigner="true" prefix="" postfix="">
        SELECT textvalue FROM PORTAL_WEBCONFIG_VALUE
        WHERE name = 'Template.Version'
      </Query>
    </OracleQueries>
  </Measurement>
</Measurements>